import{_ as n,o as s,c as a,e as t}from"./app.3b2d76f3.js";const p={},c=t(`<h1 id="locale-h" tabindex="-1"><a class="header-anchor" href="#locale-h" aria-hidden="true">#</a> locale.h</h1><h2 id="\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#\u7B80\u4ECB" aria-hidden="true">#</a> \u7B80\u4ECB</h2><p><code>locale.h</code>\u662F\u7A0B\u5E8F\u7684\u672C\u5730\u5316\u8BBE\u7F6E\uFF0C\u4E3B\u8981\u5F71\u54CD\u4EE5\u4E0B\u7684\u884C\u4E3A\u3002</p><ul><li>\u6570\u5B57\u683C\u5F0F</li><li>\u8D27\u5E01\u683C\u5F0F</li><li>\u5B57\u7B26\u96C6</li><li>\u65E5\u671F\u548C\u65F6\u95F4\u683C\u5F0F</li></ul><p>\u5B83\u8BBE\u7F6E\u4E86\u4EE5\u4E0B\u51E0\u4E2A\u5B8F\u3002</p><ul><li>LC_COLLATE\uFF1A\u5F71\u54CD\u5B57\u7B26\u4E32\u6BD4\u8F83\u51FD\u6570<code>strcoll()</code>\u548C<code>strxfrm()</code>\u3002</li><li>LC_CTYPE\uFF1A\u5F71\u54CD\u5B57\u7B26\u5904\u7406\u51FD\u6570\u7684\u884C\u4E3A\u3002</li><li>LC_MONETARY\uFF1A\u5F71\u54CD\u8D27\u5E01\u683C\u5F0F\u3002</li><li>LC_NUMERIC\uFF1A\u5F71\u54CD<code>printf()</code>\u7684\u6570\u5B57\u683C\u5F0F\u3002</li><li>LC_TIME\uFF1A\u5F71\u54CD\u65F6\u95F4\u683C\u5F0F<code>strftime()</code>\u548C<code>wcsftime()</code>\u3002</li><li>LC_ALL\uFF1A\u5C06\u4EE5\u4E0A\u6240\u6709\u7C7B\u522B\u8BBE\u7F6E\u4E3A\u7ED9\u5B9A\u7684\u8BED\u8A00\u73AF\u5883\u3002</li></ul><h2 id="setlocale" tabindex="-1"><a class="header-anchor" href="#setlocale" aria-hidden="true">#</a> setlocale()</h2><p><code>setlocale()</code>\u7528\u6765\u8BBE\u7F6E\u5F53\u524D\u7684\u5730\u533A\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span><span class="token operator">*</span> <span class="token function">setlocal</span><span class="token punctuation">(</span><span class="token keyword">int</span> category<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> locale<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5B83\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\u3002\u7B2C\u4E00\u4E2A\u53C2\u6570\u8868\u793A\u5F71\u54CD\u8303\u56F4\uFF0C\u5982\u679C\u503C\u4E3A\u524D\u9762\u4E94\u4E2A\u8868\u793A\u7C7B\u522B\u7684\u5B8F\u4E4B\u4E00\uFF0C\u5219\u53EA\u5F71\u54CD\u8BE5\u5B8F\u5BF9\u5E94\u7684\u7C7B\u522B\uFF0C\u5982\u679C\u503C\u4E3A<code>LC_ALL</code>\uFF0C\u5219\u5F71\u54CD\u6240\u6709\u7C7B\u522B\u3002\u7B2C\u4E8C\u4E2A\u53C2\u6570\u901A\u5E38\u53EA\u4E3A<code>&quot;C&quot;</code>\uFF08\u6B63\u5E38\u6A21\u5F0F\uFF09\u6216<code>&quot;&quot;</code>\uFF08\u672C\u5730\u6A21\u5F0F\uFF09\u3002</p><p>\u4EFB\u610F\u7A0B\u5E8F\u5F00\u59CB\u65F6\uFF0C\u90FD\u9690\u542B\u4E0B\u9762\u7684\u8C03\u7528\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">setlocale</span><span class="token punctuation">(</span>LC_ALL<span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0B\u9762\u7684\u8BED\u53E5\u5C06\u683C\u5F0F\u672C\u5730\u5316\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">setlocale</span><span class="token punctuation">(</span>LC_ALL<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3A\u7A7A\u5B57\u7B26\uFF0C\u8868\u793A\u4F7F\u7528\u5F53\u524D\u73AF\u5883\u63D0\u4F9B\u7684\u672C\u5730\u5316\u8BBE\u7F6E\u3002</p><p>\u7406\u8BBA\u4E0A\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E5F\u53EF\u4EE5\u8BBE\u4E3A\u5F53\u524D\u7CFB\u7EDF\u652F\u6301\u7684\u67D0\u79CD\u683C\u5F0F\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">setlocale</span><span class="token punctuation">(</span>LC_ALL<span class="token punctuation">,</span> <span class="token string">&quot;en_US.UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F46\u662F\u8FD9\u6837\u7684\u8BDD\uFF0C\u7A0B\u5E8F\u7684\u53EF\u79FB\u690D\u6027\u5C31\u53D8\u5DEE\u4E86\uFF0C\u56E0\u4E3A\u65E0\u6CD5\u4FDD\u8BC1\u5176\u4ED6\u7CFB\u7EDF\u4E5F\u4F1A\u652F\u6301\u90A3\u79CD\u683C\u5F0F\u3002\u6240\u4EE5\uFF0C\u901A\u5E38\u90FD\u5C06\u7B2C\u4E8C\u4E2A\u53C2\u6570\u8BBE\u4E3A\u7A7A\u5B57\u7B26\u4E32\uFF0C\u4F7F\u7528\u64CD\u4F5C\u7CFB\u7EDF\u7684\u5F53\u524D\u8BBE\u7F6E\u3002</p><p><code>setlocale()</code>\u7684\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\u6307\u9488\uFF0C\u8868\u793A\u5DF2\u7ECF\u8BBE\u7F6E\u597D\u7684\u683C\u5F0F\u3002\u5982\u679C\u8C03\u7528\u5931\u8D25\uFF0C\u5219\u8FD4\u56DE\u7A7A\u6307\u9488 NULL\u3002</p><p><code>setlocale()</code>\u53EF\u4EE5\u7528\u6765\u67E5\u8BE2\u5F53\u524D\u5730\u533A\uFF0C\u8FD9\u65F6\u7B2C\u4E8C\u4E2A\u53C2\u6570\u8BBE\u4E3A NULL \u5C31\u53EF\u4EE5\u4E86\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> <span class="token operator">*</span>loc<span class="token punctuation">;</span>

loc <span class="token operator">=</span> <span class="token function">setlocale</span><span class="token punctuation">(</span>LC_ALL<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8F93\u51FA Starting locale: C</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Starting locale: %s\\n&quot;</span><span class="token punctuation">,</span> loc<span class="token punctuation">)</span><span class="token punctuation">;</span>

loc <span class="token operator">=</span> <span class="token function">setlocale</span><span class="token punctuation">(</span>LC_ALL<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8F93\u51FA Native locale: en_US.UTF-8    </span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Native locale: %s\\n&quot;</span><span class="token punctuation">,</span> loc<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="localeconv" tabindex="-1"><a class="header-anchor" href="#localeconv" aria-hidden="true">#</a> localeconv()</h2><p><code>localeconv()</code>\u7528\u6765\u83B7\u53D6\u5F53\u524D\u683C\u5F0F\u7684\u8BE6\u7EC6\u4FE1\u606F\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">lconv</span><span class="token operator">*</span> <span class="token function">localeconv</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8BE5\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A Struct \u7ED3\u6784\u6307\u9488\uFF0C\u8BE5\u7ED3\u6784\u91CC\u9762\u5305\u542B\u4E86\u683C\u5F0F\u4FE1\u606F\uFF0C\u5B83\u7684\u4E3B\u8981\u5C5E\u6027\u5982\u4E0B\u3002</p><ul><li>char* mon_decimal_point\uFF1A\u8D27\u5E01\u7684\u5341\u8FDB\u5236\u5C0F\u6570\u70B9\u5B57\u7B26\uFF0C\u6BD4\u5982<code>.</code>\u3002</li><li>char* mon_thousands_sep\uFF1A\u8D27\u5E01\u7684\u5343\u4F4D\u5206\u9694\u7B26\uFF0C\u6BD4\u5982<code>,</code>\u3002</li><li>char* mon_grouping\uFF1A\u8D27\u5E01\u7684\u5206\u7EC4\u63CF\u8FF0\u7B26\u3002</li><li>char* positive_sign\uFF1A\u8D27\u5E01\u7684\u6B63\u503C\u7B26\u53F7\uFF0C\u6BD4\u5982<code>+</code>\u6216\u4E3A\u7A7A\u5B57\u7B26\u4E32\u3002</li><li>char* negative_sign\uFF1A\u8D27\u5E01\u7684\u8D1F\u503C\u7B26\u53F7\uFF0C\u6BD4\u5982<code>-</code>\u3002</li><li>char* currency_symbol\uFF1A\u8D27\u5E01\u7B26\u53F7\uFF0C\u6BD4\u5982<code>$</code>\u3002</li><li>char frac_digits\uFF1A\u6253\u5370\u8D27\u5E01\u91D1\u989D\u65F6\uFF0C\u5341\u8FDB\u5236\u5C0F\u6570\u70B9\u540E\u9762\u8F93\u51FA\u51E0\u4F4D\u5C0F\u6570\uFF0C\u6BD4\u5982\u8BBE\u4E3A<code>2</code>\u3002</li><li>char p_cs_precedes\uFF1A\u8BBE\u4E3A<code>1</code>\u65F6\uFF0C\u8D27\u5E01\u7B26\u53F7<code>currency_symbol</code>\u51FA\u73B0\u5728\u975E\u8D1F\u91D1\u989D\u524D\u9762\u3002\u8BBE\u4E3A<code>0</code>\u65F6\uFF0C\u51FA\u73B0\u5728\u540E\u9762\u3002</li><li>char n_cs_precedes\uFF1A\u8BBE\u4E3A<code>1</code>\u65F6\uFF0C\u8D27\u5E01\u7B26\u53F7<code>currency_symbol</code>\u51FA\u73B0\u5728\u8D1F\u7684\u8D27\u5E01\u91D1\u989D\u524D\u9762\u3002\u8BBE\u4E3A<code>0</code>\u65F6\uFF0C\u51FA\u73B0\u5728\u540E\u9762\u3002</li><li>char p_sep_by_space\uFF1A\u51B3\u5B9A\u4E86\u975E\u8D1F\u7684\u8D27\u5E01\u91D1\u989D\u4E0E\u8D27\u5E01\u7B26\u53F7\u4E4B\u95F4\u7684\u5206\u9694\u5B57\u7B26\u3002</li><li>char n_sep_by_space\uFF1A\u51B3\u5B9A\u4E86\u8D1F\u7684\u8D27\u5E01\u91D1\u989D\u4E0E\u8D27\u5E01\u7B26\u53F7\u4E4B\u95F4\u7684\u5206\u9694\u5B57\u7B26\u3002</li><li>char p_sign_posn\uFF1A\u51B3\u5B9A\u4E86\u975E\u8D1F\u503C\u7684\u6B63\u503C\u7B26\u53F7\u7684\u4F4D\u7F6E\u3002</li><li>char n_sign_posn\uFF1A\u51B3\u5B9A\u4E86\u8D1F\u503C\u7684\u8D1F\u503C\u7B26\u53F7\u7684\u4F4D\u7F6E\u3002</li><li>char* int_curr_symbol\uFF1A\u8D27\u5E01\u7684\u56FD\u9645\u7B26\u53F7\uFF0C\u6BD4\u5982<code>USD</code>\u3002</li><li>char int_frac_digits\uFF1A\u4F7F\u7528\u56FD\u9645\u7B26\u53F7\u65F6\uFF0C<code>frac_digits</code>\u7684\u503C\u3002</li><li>char int_p_cs_precedes\uFF1A\u4F7F\u7528\u56FD\u9645\u7B26\u53F7\u65F6\uFF0C<code>p_cs_precedes</code>\u7684\u503C\u3002</li><li>char int_n_cs_precedes\uFF1A\u4F7F\u7528\u56FD\u9645\u7B26\u53F7\u65F6\uFF0C<code>n_cs_precedes</code>\u7684\u503C\u3002</li><li>char int_p_sep_by_space\uFF1A\u4F7F\u7528\u56FD\u9645\u7B26\u53F7\u65F6\uFF0C<code>p_sep_by_space</code>\u7684\u503C\u3002</li><li>char int_n_sep_by_space\uFF1A\u4F7F\u7528\u56FD\u9645\u7B26\u53F7\u65F6\uFF0C<code>n_sep_by_space</code>\u7684\u503C\u3002</li><li>char int_p_sign_posn\uFF1A\u4F7F\u7528\u56FD\u9645\u7B26\u53F7\u65F6\uFF0C<code>p_sign_posn</code>\u7684\u503C\u3002</li><li>char int_n_sign_posn\uFF1A\u4F7F\u7528\u56FD\u9645\u7B26\u53F7\u65F6\uFF0C<code>n_sign_posn</code>\u7684\u503C\u3002</li></ul><p>\u4E0B\u9762\u7A0B\u5E8F\u6253\u5370\u5F53\u524D\u7CFB\u7EDF\u7684\u5C5E\u6027\u503C\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;locale.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">setlocale</span> <span class="token punctuation">(</span>LC_ALL<span class="token punctuation">,</span><span class="token string">&quot;zh_CN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">lconv</span> <span class="token operator">*</span> lc<span class="token punctuation">;</span>
    lc<span class="token operator">=</span><span class="token function">localeconv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;decimal_point: %s\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>decimal_point<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;thousands_sep: %s\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>thousands_sep<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;grouping: %s\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>grouping<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;int_curr_symbol: %s\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>int_curr_symbol<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;currency_symbol: %s\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>currency_symbol<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;mon_decimal_point: %s\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>mon_decimal_point<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;mon_thousands_sep: %s\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>mon_thousands_sep<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;mon_grouping: %s\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>mon_grouping<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;positive_sign: %s\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>positive_sign<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;negative_sign: %s\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>negative_sign<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;frac_digits: %d\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>frac_digits<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;p_cs_precedes: %d\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>p_cs_precedes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;n_cs_precedes: %d\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>n_cs_precedes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;p_sep_by_space: %d\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>p_sep_by_space<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;n_sep_by_space: %d\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>n_sep_by_space<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;p_sign_posn: %d\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>p_sign_posn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;n_sign_posn: %d\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>n_sign_posn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;int_frac_digits: %d\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>int_frac_digits<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;int_p_cs_precedes: %d\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>int_p_cs_precedes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;int_n_cs_precedes: %d\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>int_n_cs_precedes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;int_p_sep_by_space: %d\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>int_p_sep_by_space<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;int_n_sep_by_space: %d\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>int_n_sep_by_space<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;int_p_sign_posn: %d\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>int_p_sign_posn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">&quot;int_n_sign_posn: %d\\n&quot;</span><span class="token punctuation">,</span>lc<span class="token operator">-&gt;</span>int_n_sign_posn<span class="token punctuation">)</span><span class="token punctuation">;</span>
   
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),o=[c];function e(i,l){return s(),a("div",null,o)}const r=n(p,[["render",e],["__file","locale.h.html.vue"]]);export{r as default};
