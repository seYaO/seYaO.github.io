import{_ as e,o as s,c as n,e as a}from"./app.3b2d76f3.js";const i={},o=a(`<h1 id="limits-h" tabindex="-1"><a class="header-anchor" href="#limits-h" aria-hidden="true">#</a> limits.h</h1><p><code>limits.h</code>\u63D0\u4F9B\u4E86\u7528\u6765\u5B9A\u4E49\u5404\u79CD\u6574\u6570\u7C7B\u578B\uFF08\u5305\u62EC\u5B57\u7B26\u7C7B\u578B\uFF09\u53D6\u503C\u8303\u56F4\u7684\u5B8F\u3002</p><ul><li><code>CHAR_BIT</code>\uFF1A\u6BCF\u4E2A\u5B57\u7B26\u5305\u542B\u7684\u4E8C\u8FDB\u5236\u4F4D\u6570\u3002</li><li><code>SCHAR_MIN</code>\uFF1Asigned char \u7C7B\u578B\u7684\u6700\u5C0F\u503C\u3002</li><li><code>SCHAR_MAX</code>\uFF1Asigned char \u7C7B\u578B\u7684\u6700\u5927\u503C\u3002</li><li><code>UCHAR_MAX</code>\uFF1Aunsiged char \u7C7B\u578B\u7684\u6700\u5927\u503C\u3002</li><li><code>CHAR_MIN</code>\uFF1Achar \u7C7B\u578B\u7684\u6700\u5C0F\u503C\u3002</li><li><code>CHAR_MAX</code>\uFF1Achar \u7C7B\u578B\u7684\u6700\u5927\u503C\u3002</li><li><code>MB_LEN_MAX</code>\uFF1A\u591A\u5B57\u8282\u5B57\u7B26\u6700\u591A\u5305\u542B\u7684\u5B57\u8282\u6570\u3002</li><li><code>SHRT_MIN</code>\uFF1Ashort int \u7C7B\u578B\u7684\u6700\u5C0F\u503C\u3002</li><li><code>SHRT_MAX</code>\uFF1Ashort int \u7C7B\u578B\u7684\u6700\u5927\u503C\u3002</li><li><code>USHRT_MAX</code>\uFF1Aunsigned short int \u7C7B\u578B\u7684\u6700\u5927\u503C\u3002</li><li><code>INT_MIN</code>\uFF1Aint \u7C7B\u578B\u7684\u6700\u5C0F\u503C\u3002</li><li><code>INT_MAX</code>\uFF1Aint \u7C7B\u578B\u7684\u6700\u5927\u503C\u3002</li><li><code>UINT_MAX</code>\uFF1Aunsigned int \u7C7B\u578B\u7684\u6700\u5927\u503C\u3002</li><li><code>LONG_MIN</code>\uFF1Along int \u7C7B\u578B\u7684\u6700\u5C0F\u503C\u3002</li><li><code>LONG_MAX</code>\uFF1Along int \u7C7B\u578B\u7684\u6700\u5927\u503C\u3002</li><li><code>ULONG_MAX</code>\uFF1Aunsigned long int \u7C7B\u578B\u7684\u6700\u5927\u503C\u3002</li><li><code>LLONG_MIN</code>\uFF1Along long int \u7C7B\u578B\u7684\u6700\u5C0F\u503C\u3002</li><li><code>LLONG_MAX</code>\uFF1Along long int \u7C7B\u578B\u7684\u6700\u5927\u503C\u3002</li><li><code>ULLONG_MAX</code>\uFF1Aunsigned long long int \u7C7B\u578B\u7684\u6700\u5927\u503C\u3002</li></ul><p>\u4E0B\u9762\u7684\u793A\u4F8B\u662F\u4F7F\u7528\u9884\u5904\u7406\u6307\u4EE4\u5224\u65AD\uFF0Cint \u7C7B\u578B\u662F\u5426\u53EF\u4EE5\u7528\u6765\u5B58\u50A8\u5927\u4E8E 100000 \u7684\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">INT_MAX <span class="token operator">&lt;</span> <span class="token number">100000</span></span></span>
  <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">error</span> <span class="token expression"><span class="token keyword">int</span> type is too small</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u5982\u679C int \u7C7B\u578B\u592A\u5C0F\uFF0C\u9884\u5904\u7406\u5668\u4F1A\u663E\u793A\u4E00\u6761\u51FA\u9519\u6D88\u606F\u3002</p><p>\u53EF\u4EE5\u4F7F\u7528<code>limit.h</code>\u91CC\u9762\u7684\u5B8F\uFF0C\u4E3A\u7C7B\u578B\u522B\u540D\u9009\u62E9\u6B63\u786E\u7684\u5E95\u5C42\u7C7B\u578B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">INT_MAX <span class="token operator">&gt;=</span> <span class="token number">100000</span></span></span>
  <span class="token keyword">typedef</span> <span class="token keyword">int</span> Quantity<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span>
  <span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">int</span> Quantity<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u5982\u679C\u6574\u6570\u7C7B\u578B\u7684\u6700\u5927\u503C\uFF08<code>INT_MAX</code>\uFF09\u4E0D\u5C0F\u4E8E100000\uFF0C\u90A3\u4E48\u7C7B\u578B\u522B\u540D<code>Quantity</code>\u6307\u5411<code>int</code>\uFF0C\u5426\u5219\u5C31\u6307\u5411<code>long int</code>\u3002</p>`,9),c=[o];function l(d,t){return s(),n("div",null,c)}const r=e(i,[["render",l],["__file","limits.h.html.vue"]]);export{r as default};
