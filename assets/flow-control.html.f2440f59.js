import{_ as n,o as s,c as a,e}from"./app.3b2d76f3.js";const p={},o=e(`<h1 id="\u6D41\u7A0B\u63A7\u5236" tabindex="-1"><a class="header-anchor" href="#\u6D41\u7A0B\u63A7\u5236" aria-hidden="true">#</a> \u6D41\u7A0B\u63A7\u5236</h1><p>C \u8BED\u8A00\u7684\u7A0B\u5E8F\u662F\u987A\u5E8F\u6267\u884C\uFF0C\u5373\u5148\u6267\u884C\u524D\u9762\u7684\u8BED\u53E5\uFF0C\u518D\u6267\u884C\u540E\u9762\u7684\u8BED\u53E5\u3002\u5F00\u53D1\u8005\u5982\u679C\u60F3\u8981\u63A7\u5236\u7A0B\u5E8F\u6267\u884C\u7684\u6D41\u7A0B\uFF0C\u5C31\u5FC5\u987B\u4F7F\u7528\u6D41\u7A0B\u63A7\u5236\u7684\u8BED\u6CD5\u7ED3\u6784\uFF0C\u4E3B\u8981\u662F\u6761\u4EF6\u6267\u884C\u548C\u5FAA\u73AF\u6267\u884C\u3002</p><h2 id="if-\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#if-\u8BED\u53E5" aria-hidden="true">#</a> if \u8BED\u53E5</h2><p><code>if</code>\u8BED\u53E5\u7528\u4E8E\u6761\u4EF6\u5224\u65AD\uFF0C\u6EE1\u8DB3\u6761\u4EF6\u65F6\uFF0C\u5C31\u6267\u884C\u6307\u5B9A\u7684\u8BED\u53E5\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>expression<span class="token punctuation">)</span> statement
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u5F0F\u5B50\u4E2D\uFF0C\u8868\u8FBE\u5F0F<code>expression</code>\u4E3A\u771F\uFF08\u503C\u4E0D\u4E3A<code>0</code>\uFF09\u65F6\uFF0C\u5C31\u6267\u884C<code>statement</code>\u8BED\u53E5\u3002</p><p><code>if</code>\u540E\u9762\u7684\u5224\u65AD\u6761\u4EF6<code>expression</code>\u5916\u9762\u5FC5\u987B\u6709\u5706\u62EC\u53F7\uFF0C\u5426\u5219\u4F1A\u62A5\u9519\u3002\u8BED\u53E5\u4F53\u90E8\u5206<code>statement</code>\u53EF\u4EE5\u662F\u4E00\u4E2A\u8BED\u53E5\uFF0C\u4E5F\u53EF\u4EE5\u662F\u653E\u5728\u5927\u62EC\u53F7\u91CC\u9762\u7684\u590D\u5408\u8BED\u53E5\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;x is 10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u5F53\u53D8\u91CF<code>x</code>\u4E3A<code>10</code>\u65F6\uFF0C\u5C31\u4F1A\u8F93\u51FA\u4E00\u884C\u6587\u5B57\u3002\u5BF9\u4E8E\u53EA\u6709\u4E00\u4E2A\u8BED\u53E5\u7684\u8BED\u53E5\u4F53\uFF0C\u8BED\u53E5\u90E8\u5206\u901A\u5E38\u53E6\u8D77\u4E00\u884C\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;x is 10\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6709\u591A\u6761\u8BED\u53E5\uFF0C\u5C31\u9700\u8981\u628A\u5B83\u4EEC\u653E\u5728\u5927\u62EC\u53F7\u91CC\u9762\uFF0C\u7EC4\u6210\u4E00\u4E2A\u590D\u5408\u8BED\u53E5\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>line_num <span class="token operator">==</span> MAX_LINES<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  line_num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  page_num<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>if</code>\u8BED\u53E5\u53EF\u4EE5\u5E26\u6709<code>else</code>\u5206\u652F\uFF0C\u6307\u5B9A\u6761\u4EF6\u4E0D\u6210\u7ACB\u65F6\uFF08\u8868\u8FBE\u5F0F<code>expression</code>\u7684\u503C\u4E3A<code>0</code>\uFF09\uFF0C\u6240\u8981\u6267\u884C\u7684\u4EE3\u7801\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>expression<span class="token punctuation">)</span> statement
<span class="token keyword">else</span> statement
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> j<span class="token punctuation">)</span>
  max <span class="token operator">=</span> i<span class="token punctuation">;</span>
<span class="token keyword">else</span>
  max <span class="token operator">=</span> j<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C<code>else</code>\u7684\u8BED\u53E5\u90E8\u5206\u591A\u4E8E\u4E00\u884C\uFF0C\u540C\u6837\u53EF\u4EE5\u628A\u5B83\u4EEC\u653E\u5728\u5927\u62EC\u53F7\u91CC\u9762\u3002</p><p><code>else</code>\u53EF\u4EE5\u4E0E\u53E6\u4E00\u4E2A<code>if</code>\u8BED\u53E5\u8FDE\u7528\uFF0C\u6784\u6210\u591A\u91CD\u5224\u65AD\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>expression<span class="token punctuation">)</span>
  statement
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>expression<span class="token punctuation">)</span>
  statement
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>expression<span class="token punctuation">)</span>
  statement
<span class="token keyword">else</span>
  statement
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6709\u591A\u4E2A<code>if</code>\u548C<code>else</code>\uFF0C\u53EF\u4EE5\u8BB0\u4F4F\u8FD9\u6837\u4E00\u6761\u89C4\u5219\uFF0C<code>else</code>\u603B\u662F\u8DDF\u6700\u63A5\u8FD1\u7684<code>if</code>\u5339\u914D\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">&gt;</span> <span class="token number">6</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">&lt;</span> <span class="token number">12</span><span class="token punctuation">)</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;The number is more than 6, less than 12.\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">else</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;It is wrong number.\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>else</code>\u90E8\u5206\u5339\u914D\u6700\u8FD1\u7684<code>if</code>\uFF08\u5373<code>number &lt; 12</code>\uFF09\uFF0C\u6240\u4EE5\u5982\u679C<code>number</code>\u7B49\u4E8E6\uFF0C\u5C31\u4E0D\u4F1A\u6267\u884C<code>else</code>\u7684\u90E8\u5206\u3002</p><p>\u8FD9\u6837\u5F88\u5BB9\u6613\u51FA\u9519\uFF0C\u4E3A\u4E86\u63D0\u4F9B\u4EE3\u7801\u7684\u53EF\u8BFB\u6027\uFF0C\u5EFA\u8BAE\u4F7F\u7528\u5927\u62EC\u53F7\uFF0C\u660E\u786E<code>else</code>\u5339\u914D\u54EA\u4E00\u4E2A<code>if</code>\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">&gt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">&lt;</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;The number is more than 6, less than 12.\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;It is wrong number.\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u4F7F\u7528\u4E86\u5927\u62EC\u53F7\uFF0C\u5C31\u53EF\u4EE5\u6E05\u6670\u5730\u770B\u51FA<code>else</code>\u5339\u914D\u5916\u5C42\u7684<code>if</code>\u3002</p><h2 id="\u4E09\u5143\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u4E09\u5143\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u4E09\u5143\u8FD0\u7B97\u7B26 ?:</h2><p>C \u8BED\u8A00\u6709\u4E00\u4E2A\u4E09\u5143\u8868\u8FBE\u5F0F<code>?:</code>\uFF0C\u53EF\u4EE5\u7528\u4F5C<code>if...else</code>\u7684\u7B80\u5199\u5F62\u5F0F\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token operator">&lt;</span>expression1<span class="token operator">&gt;</span> <span class="token operator">?</span> <span class="token operator">&lt;</span>expression2<span class="token operator">&gt;</span> <span class="token operator">:</span> <span class="token operator">&lt;</span>expression3<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u64CD\u4F5C\u7B26\u7684\u542B\u4E49\u662F\uFF0C\u8868\u8FBE\u5F0F<code>expression1</code>\u5982\u679C\u4E3A<code>true</code>\uFF08\u975E0\u503C\uFF09\uFF0C\u5C31\u6267\u884C<code>expression2</code>\uFF0C\u5426\u5219\u6267\u884C<code>expression3</code>\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u8FD4\u56DE\u4E24\u4E2A\u503C\u4E4B\u4E2D\u7684\u8F83\u5927\u503C\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token punctuation">(</span>i <span class="token operator">&gt;</span> j<span class="token punctuation">)</span> <span class="token operator">?</span> i <span class="token operator">:</span> j<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u7B49\u540C\u4E8E\u4E0B\u9762\u7684<code>if</code>\u8BED\u53E5\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> j<span class="token punctuation">)</span>
  <span class="token keyword">return</span> i<span class="token punctuation">;</span>
<span class="token keyword">else</span>
  <span class="token keyword">return</span> j<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="switch-\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#switch-\u8BED\u53E5" aria-hidden="true">#</a> switch \u8BED\u53E5</h2><p>switch \u8BED\u53E5\u662F\u4E00\u79CD\u7279\u6B8A\u5F62\u5F0F\u7684 if...else \u7ED3\u6784\uFF0C\u7528\u4E8E\u5224\u65AD\u6761\u4EF6\u6709\u591A\u4E2A\u7ED3\u679C\u7684\u60C5\u51B5\u3002\u5B83\u628A\u591A\u91CD\u7684<code>else if</code>\u6539\u6210\u66F4\u6613\u7528\u3001\u53EF\u8BFB\u6027\u66F4\u597D\u7684\u5F62\u5F0F\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>expression<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> value1<span class="token operator">:</span> statement
  <span class="token keyword">case</span> value2<span class="token operator">:</span> statement
  <span class="token keyword">default</span><span class="token operator">:</span> statement
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u6839\u636E\u8868\u8FBE\u5F0F<code>expression</code>\u4E0D\u540C\u7684\u503C\uFF0C\u6267\u884C\u76F8\u5E94\u7684<code>case</code>\u5206\u652F\u3002\u5982\u679C\u627E\u4E0D\u5230\u5BF9\u5E94\u7684\u503C\uFF0C\u5C31\u6267\u884C<code>default</code>\u5206\u652F\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>grade<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;False&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;True&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">default</span><span class="token operator">:</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u6839\u636E\u53D8\u91CF<code>grade</code>\u4E0D\u540C\u7684\u503C\uFF0C\u4F1A\u6267\u884C\u4E0D\u540C\u7684<code>case</code>\u5206\u652F\u3002\u5982\u679C\u7B49\u4E8E<code>0</code>\uFF0C\u6267\u884C<code>case 0</code>\u7684\u90E8\u5206\uFF1B\u5982\u679C\u7B49\u4E8E<code>1</code>\uFF0C\u6267\u884C<code>case 1</code>\u7684\u90E8\u5206\uFF1B\u5426\u5219\uFF0C\u6267\u884C<code>default</code>\u7684\u90E8\u5206\u3002<code>default</code>\u8868\u793A\u5904\u7406\u4EE5\u4E0A\u6240\u6709<code>case</code>\u90FD\u4E0D\u5339\u914D\u7684\u60C5\u51B5\u3002</p><p>\u6BCF\u4E2A<code>case</code>\u8BED\u53E5\u4F53\u7684\u7ED3\u5C3E\uFF0C\u90FD\u5E94\u8BE5\u6709\u4E00\u4E2A<code>break</code>\u8BED\u53E5\uFF0C\u4F5C\u7528\u662F\u8DF3\u51FA\u6574\u4E2A<code>switch</code>\u7ED3\u6784\uFF0C\u4E0D\u518D\u5F80\u4E0B\u6267\u884C\u3002\u5982\u679C\u7F3A\u5C11<code>break</code>\uFF0C\u5C31\u4F1A\u5BFC\u81F4\u7EE7\u7EED\u6267\u884C\u4E0B\u4E00\u4E2A<code>case</code>\u6216<code>default</code>\u5206\u652F\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>grade<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;False&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;True&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">default</span><span class="token operator">:</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>case 0</code>\u7684\u90E8\u5206\u6CA1\u6709<code>break</code>\u8BED\u53E5\uFF0C\u5BFC\u81F4\u8FD9\u4E2A\u5206\u652F\u6267\u884C\u5B8C\u4EE5\u540E\uFF0C\u4E0D\u4F1A\u8DF3\u51FA<code>switch</code>\u7ED3\u6784\uFF0C\u7EE7\u7EED\u6267\u884C<code>case 1</code>\u5206\u652F\u3002</p><p>\u5229\u7528\u8FD9\u4E2A\u7279\u70B9\uFF0C\u5982\u679C\u591A\u4E2A<code>case</code>\u5206\u652F\u5BF9\u5E94\u540C\u6837\u7684\u8BED\u53E5\u4F53\uFF0C\u53EF\u4EE5\u5199\u6210\u4E0B\u9762\u8FD9\u6837\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>grade<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
  <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;True&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">default</span><span class="token operator">:</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>case 0</code>\u5206\u652F\u6CA1\u6709\u4EFB\u4F55\u8BED\u53E5\uFF0C\u5BFC\u81F4<code>case 0</code>\u548C<code>case 1</code>\u90FD\u4F1A\u6267\u884C\u540C\u6837\u7684\u8BED\u53E5\u4F53\u3002</p><p><code>case</code>\u540E\u9762\u7684\u8BED\u53E5\u4F53\uFF0C\u4E0D\u7528\u653E\u5728\u5927\u62EC\u53F7\u91CC\u9762\uFF0C\u8FD9\u4E5F\u662F\u4E3A\u4EC0\u4E48\u9700\u8981<code>break</code>\u7684\u539F\u56E0\u3002</p><p><code>default</code>\u5206\u652F\u7528\u6765\u5904\u7406\u524D\u9762\u7684 case \u90FD\u4E0D\u5339\u914D\u7684\u60C5\u51B5\uFF0C\u6700\u597D\u653E\u5728\u6240\u6709 case \u7684\u540E\u9762\uFF0C\u8FD9\u6837\u5C31\u4E0D\u7528\u5199<code>break</code>\u8BED\u53E5\u3002\u8FD9\u4E2A\u5206\u652F\u662F\u53EF\u9009\u7684\uFF0C\u5982\u679C\u6CA1\u6709\u8BE5\u5206\u652F\uFF0C\u9047\u5230\u6240\u6709\u7684 case \u90FD\u4E0D\u5339\u914D\u7684\u60C5\u51B5\uFF0C\u5C31\u4F1A\u76F4\u63A5\u8DF3\u51FA\u6574\u4E2A switch \u4EE3\u7801\u5757\u3002</p><h2 id="while-\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#while-\u8BED\u53E5" aria-hidden="true">#</a> while \u8BED\u53E5</h2><p><code>while</code>\u8BED\u53E5\u7528\u4E8E\u5FAA\u73AF\u7ED3\u6784\uFF0C\u6EE1\u8DB3\u6761\u4EF6\u65F6\uFF0C\u4E0D\u65AD\u6267\u884C\u5FAA\u73AF\u4F53\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">while</span> <span class="token punctuation">(</span>expression<span class="token punctuation">)</span>
  statement
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5982\u679C\u8868\u8FBE\u5F0F<code>expression</code>\u4E3A\u975E\u96F6\u503C\uFF08\u8868\u793A\u771F\uFF09\uFF0C\u5C31\u4F1A\u6267\u884C<code>statement</code>\u8BED\u53E5\uFF0C\u7136\u540E\u518D\u6B21\u5224\u65AD<code>expression</code>\u662F\u5426\u4E3A\u96F6\uFF1B\u5982\u679C<code>expression</code>\u4E3A\u96F6\uFF08\u8868\u793A\u4F2A\uFF09\u5C31\u8DF3\u51FA\u5FAA\u73AF\uFF0C\u4E0D\u518D\u6267\u884C\u5FAA\u73AF\u4F53\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> n<span class="token punctuation">)</span>
  i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u53EA\u8981<code>i</code>\u5C0F\u4E8E<code>n</code>\uFF0C<code>i</code>\u5C31\u4F1A\u4E0D\u65AD\u589E\u52A02\u3002</p><p>\u5982\u679C\u5FAA\u73AF\u4F53\u6709\u591A\u4E2A\u8BED\u53E5\uFF0C\u5C31\u9700\u8981\u4F7F\u7528\u5927\u62EC\u53F7\u5C06\u8FD9\u4E9B\u8BED\u53E5\u7EC4\u5408\u5728\u4E00\u8D77\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">while</span> <span class="token punctuation">(</span>expression<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  statement<span class="token punctuation">;</span>
  statement<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;i is now %d!\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  i<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;All done!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5FAA\u73AF\u4F53\u4F1A\u6267\u884C10\u6B21\uFF0C\u6BCF\u6B21\u5C06<code>i</code>\u589E\u52A0<code>1</code>\uFF0C\u76F4\u5230\u7B49\u4E8E<code>10</code>\u624D\u9000\u51FA\u5FAA\u73AF\u3002</p><p>\u53EA\u8981\u6761\u4EF6\u4E3A\u771F\uFF0C<code>while</code>\u4F1A\u4EA7\u751F\u65E0\u9650\u5FAA\u73AF\u3002\u4E0B\u9762\u662F\u4E00\u79CD\u5E38\u89C1\u7684\u65E0\u9650\u5FAA\u73AF\u7684\u5199\u6CD5\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u793A\u4F8B\u867D\u7136\u662F\u65E0\u9650\u5FAA\u73AF\uFF0C\u4F46\u662F\u5FAA\u73AF\u4F53\u5185\u90E8\u53EF\u4EE5\u7528<code>break</code>\u8BED\u53E5\u8DF3\u51FA\u5FAA\u73AF\u3002</p><h2 id="do-while-\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#do-while-\u7ED3\u6784" aria-hidden="true">#</a> do...while \u7ED3\u6784</h2><p><code>do...while</code>\u7ED3\u6784\u662F<code>while</code>\u7684\u53D8\u4F53\uFF0C\u5B83\u4F1A\u5148\u6267\u884C\u4E00\u6B21\u5FAA\u73AF\u4F53\uFF0C\u7136\u540E\u518D\u5224\u65AD\u662F\u5426\u6EE1\u8DB3\u6761\u4EF6\u3002\u5982\u679C\u6EE1\u8DB3\u7684\u8BDD\uFF0C\u5C31\u7EE7\u7EED\u6267\u884C\u5FAA\u73AF\u4F53\uFF0C\u5426\u5219\u8DF3\u51FA\u5FAA\u73AF\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">do</span> statement
<span class="token keyword">while</span> <span class="token punctuation">(</span>expression<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u4E0D\u7BA1\u6761\u4EF6<code>expression</code>\u662F\u5426\u6210\u7ACB\uFF0C\u5FAA\u73AF\u4F53<code>statement</code>\u81F3\u5C11\u4F1A\u6267\u884C\u4E00\u6B21\u3002\u6BCF\u6B21<code>statement</code>\u6267\u884C\u5B8C\u6BD5\uFF0C\u5C31\u4F1A\u5224\u65AD\u4E00\u6B21<code>expression</code>\uFF0C\u51B3\u5B9A\u662F\u5426\u7ED3\u675F\u5FAA\u73AF\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token keyword">do</span> <span class="token operator">--</span>i<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u53D8\u91CF<code>i</code>\u5148\u51CF\u53BB1\uFF0C\u518D\u5224\u65AD\u662F\u5426\u5927\u4E8E0\u3002\u5982\u679C\u5927\u4E8E0\uFF0C\u5C31\u7EE7\u7EED\u51CF\u53BB1\uFF0C\u76F4\u5230<code>i</code>\u7B49\u4E8E<code>0</code>\u4E3A\u6B62\u3002</p><p>\u5982\u679C\u5FAA\u73AF\u90E8\u5206\u6709\u591A\u6761\u8BED\u53E5\uFF0C\u5C31\u9700\u8981\u653E\u5728\u5927\u62EC\u53F7\u91CC\u9762\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token keyword">do</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;i is %d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  i<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;All done!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0C\u53D8\u91CF<code>i</code>\u5E76\u4E0D\u6EE1\u8DB3\u5C0F\u4E8E<code>10</code>\u7684\u6761\u4EF6\uFF0C\u4F46\u662F\u5FAA\u73AF\u4F53\u8FD8\u662F\u4F1A\u6267\u884C\u4E00\u6B21\u3002</p><h2 id="for-\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#for-\u8BED\u53E5" aria-hidden="true">#</a> for \u8BED\u53E5</h2><p><code>for</code>\u8BED\u53E5\u662F\u6700\u5E38\u7528\u7684\u5FAA\u73AF\u7ED3\u6784\uFF0C\u901A\u5E38\u7528\u4E8E\u7CBE\u786E\u63A7\u5236\u5FAA\u73AF\u6B21\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>initialization<span class="token punctuation">;</span> continuation<span class="token punctuation">;</span> action<span class="token punctuation">)</span>
  statement<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>for</code>\u8BED\u53E5\u7684\u6761\u4EF6\u90E8\u5206\uFF08\u5373\u5706\u62EC\u53F7\u91CC\u9762\u7684\u90E8\u5206\uFF09\u6709\u4E09\u4E2A\u8868\u8FBE\u5F0F\u3002</p><ul><li><code>initialization</code>\uFF1A\u521D\u59CB\u5316\u8868\u8FBE\u5F0F\uFF0C\u7528\u4E8E\u521D\u59CB\u5316\u5FAA\u73AF\u53D8\u91CF\uFF0C\u53EA\u6267\u884C\u4E00\u6B21\u3002</li><li><code>continuation</code>\uFF1A\u5224\u65AD\u8868\u8FBE\u5F0F\uFF0C\u53EA\u8981\u4E3A<code>true</code>\uFF0C\u5C31\u4F1A\u4E0D\u65AD\u6267\u884C\u5FAA\u73AF\u4F53\u3002</li><li><code>action</code>\uFF1A\u5FAA\u73AF\u53D8\u91CF\u5904\u7406\u8868\u8FBE\u5F0F\uFF0C\u6BCF\u8F6E\u5FAA\u73AF\u7ED3\u675F\u540E\u6267\u884C\uFF0C\u4F7F\u5F97\u5FAA\u73AF\u53D8\u91CF\u53D1\u751F\u53D8\u5316\u3002</li></ul><p>\u5FAA\u73AF\u4F53\u90E8\u5206\u7684<code>statement</code>\u53EF\u4EE5\u662F\u4E00\u6761\u8BED\u53E5\uFF0C\u4E5F\u53EF\u4EE5\u662F\u653E\u5728\u5927\u62EC\u53F7\u91CC\u9762\u7684\u590D\u5408\u8BED\u53E5\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;i is %d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u5FAA\u73AF\u53D8\u91CF<code>i</code>\u5728<code>for</code>\u7684\u7B2C\u4E00\u4E2A\u8868\u8FBE\u5F0F\u91CC\u9762\u58F0\u660E\uFF0C\u8BE5\u53D8\u91CF\u53EA\u7528\u4E8E\u672C\u6B21\u5FAA\u73AF\u3002\u79BB\u5F00\u5FAA\u73AF\u4F53\u4E4B\u540E\uFF0C\u5C31\u4F1A\u5931\u6548\u3002</p><p>\u6761\u4EF6\u90E8\u5206\u7684\u4E09\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u6BCF\u4E00\u4E2A\u90FD\u53EF\u4EE5\u6709\u591A\u4E2A\u8BED\u53E5\uFF0C\u8BED\u53E5\u4E0E\u8BED\u53E5\u4E4B\u95F4\u4F7F\u7528\u9017\u53F7\u5206\u9694\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">999</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">,</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d, %d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u521D\u59CB\u5316\u90E8\u5206\u6709\u4E24\u4E2A\u8BED\u53E5\uFF0C\u5206\u522B\u5BF9\u53D8\u91CF<code>i</code>\u548C<code>j</code>\u8FDB\u884C\u8D4B\u503C\u3002</p><p><code>for</code>\u7684\u4E09\u4E2A\u8868\u8FBE\u5F0F\u90FD\u4E0D\u662F\u5FC5\u9700\u7684\uFF0C\u751A\u81F3\u53EF\u4EE5\u5168\u90E8\u7701\u7565\uFF0C\u8FD9\u4F1A\u5F62\u6210\u65E0\u9650\u5FAA\u73AF\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u672C\u884C\u4F1A\u65E0\u9650\u5FAA\u73AF\u5730\u6253\u5370\u3002\\n&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u7531\u4E8E\u6CA1\u6709\u5224\u65AD\u6761\u4EF6\uFF0C\u5C31\u4F1A\u5F62\u6210\u65E0\u9650\u5FAA\u73AF\u3002</p><h2 id="break-\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#break-\u8BED\u53E5" aria-hidden="true">#</a> break \u8BED\u53E5</h2><p><code>break</code>\u8BED\u53E5\u6709\u4E24\u79CD\u7528\u6CD5\u3002\u4E00\u79CD\u662F\u4E0E<code>switch</code>\u8BED\u53E5\u914D\u5957\u4F7F\u7528\uFF0C\u7528\u6765\u4E2D\u65AD\u67D0\u4E2A\u5206\u652F\u7684\u6267\u884C\uFF0C\u8FD9\u79CD\u7528\u6CD5\u524D\u9762\u5DF2\u7ECF\u4ECB\u7ECD\u8FC7\u4E86\u3002\u53E6\u4E00\u79CD\u7528\u6CD5\u662F\u5728\u5FAA\u73AF\u4F53\u5185\u90E8\u8DF3\u51FA\u5FAA\u73AF\uFF0C\u4E0D\u518D\u8FDB\u884C\u540E\u9762\u7684\u5FAA\u73AF\u4E86\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d, %d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>break</code>\u8BED\u53E5\u4F7F\u5F97\u5FAA\u73AF\u8DF3\u5230\u4E0B\u4E00\u4E2A<code>i</code>\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ch <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token constant">EOF</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token function">putchar</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u4E00\u65E6\u8BFB\u5230\u6362\u884C\u7B26\uFF08<code>\\n</code>\uFF09\uFF0C<code>break</code>\u547D\u4EE4\u5C31\u8DF3\u51FA\u6574\u4E2A<code>while</code>\u5FAA\u73AF\uFF0C\u4E0D\u518D\u7EE7\u7EED\u8BFB\u53D6\u4E86\u3002</p><p>\u6CE8\u610F\uFF0C<code>break</code>\u547D\u4EE4\u53EA\u80FD\u8DF3\u51FA\u5FAA\u73AF\u4F53\u548C<code>switch</code>\u7ED3\u6784\uFF0C\u4E0D\u80FD\u8DF3\u51FA<code>if</code>\u7ED3\u6784\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// \u65E0\u6548</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;hello\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>break</code>\u8BED\u53E5\u662F\u65E0\u6548\u7684\uFF0C\u56E0\u4E3A\u5B83\u4E0D\u80FD\u8DF3\u51FA\u5916\u5C42\u7684<code>if</code>\u7ED3\u6784\u3002</p><h2 id="continue-\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#continue-\u8BED\u53E5" aria-hidden="true">#</a> continue \u8BED\u53E5</h2><p><code>continue</code>\u8BED\u53E5\u7528\u4E8E\u5728\u5FAA\u73AF\u4F53\u5185\u90E8\u7EC8\u6B62\u672C\u8F6E\u5FAA\u73AF\uFF0C\u8FDB\u5165\u4E0B\u4E00\u8F6E\u5FAA\u73AF\u3002\u53EA\u8981\u9047\u5230<code>continue</code>\u8BED\u53E5\uFF0C\u5FAA\u73AF\u4F53\u5185\u90E8\u540E\u9762\u7684\u8BED\u53E5\u5C31\u4E0D\u6267\u884C\u4E86\uFF0C\u56DE\u5230\u5FAA\u73AF\u4F53\u7684\u5934\u90E8\uFF0C\u5F00\u59CB\u6267\u884C\u4E0B\u4E00\u8F6E\u5FAA\u73AF\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d, %d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">continue</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u6709\u6CA1\u6709<code>continue</code>\u8BED\u53E5\uFF0C\u6548\u679C\u4E00\u6837\uFF0C\u90FD\u8868\u793A\u8DF3\u5230\u4E0B\u4E00\u4E2A<code>j</code>\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ch <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;\\t&#39;</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
  <span class="token function">putchar</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u53EA\u8981\u8BFB\u5230\u7684\u5B57\u7B26\u662F\u5236\u8868\u7B26\uFF08<code>\\t</code>\uFF09\uFF0C\u5C31\u7528<code>continue</code>\u8BED\u53E5\u8DF3\u8FC7\u8BE5\u5B57\u7B26\uFF0C\u8BFB\u53D6\u4E0B\u4E00\u4E2A\u5B57\u7B26\u3002</p><h2 id="goto-\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#goto-\u8BED\u53E5" aria-hidden="true">#</a> goto \u8BED\u53E5</h2><p>goto \u8BED\u53E5\u7528\u4E8E\u8DF3\u5230\u6307\u5B9A\u7684\u6807\u7B7E\u540D\u3002\u8FD9\u4F1A\u7834\u574F\u7ED3\u6784\u5316\u7F16\u7A0B\uFF0C\u5EFA\u8BAE\u4E0D\u8981\u8F7B\u6613\u4F7F\u7528\uFF0C\u8FD9\u91CC\u4E3A\u4E86\u8BED\u6CD5\u7684\u5B8C\u6574\uFF0C\u4ECB\u7ECD\u4E00\u4E0B\u5B83\u7684\u7528\u6CD5\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> ch<span class="token punctuation">;</span>

top<span class="token operator">:</span> ch <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;q&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">goto</span> top<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>top</code>\u662F\u4E00\u4E2A\u6807\u7B7E\u540D\uFF0C\u53EF\u4EE5\u653E\u5728\u6B63\u5E38\u8BED\u53E5\u7684\u524D\u9762\uFF0C\u76F8\u5F53\u4E8E\u4E3A\u8FD9\u884C\u8BED\u53E5\u505A\u4E86\u4E00\u4E2A\u6807\u8BB0\u3002\u7A0B\u5E8F\u6267\u884C\u5230<code>goto</code>\u8BED\u53E5\uFF0C\u5C31\u4F1A\u8DF3\u8F6C\u5230\u5B83\u6307\u5B9A\u7684\u6807\u7B7E\u540D\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>infinite_loop<span class="token operator">:</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, world!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">goto</span> infinite_loop<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u4F1A\u4EA7\u751F\u65E0\u9650\u5FAA\u73AF\u3002</p><p>goto \u7684\u4E00\u4E2A\u4E3B\u8981\u7528\u6CD5\u662F\u8DF3\u51FA\u591A\u5C42\u5FAA\u73AF\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">do</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>some_error_condition<span class="token punctuation">)</span>
          <span class="token keyword">goto</span> bail<span class="token punctuation">;</span>    
      <span class="token punctuation">}</span> <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
    
bail<span class="token operator">:</span>
<span class="token comment">// ... ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u6709\u5F88\u590D\u6742\u7684\u5D4C\u5957\u5FAA\u73AF\uFF0C\u4E0D\u4F7F\u7528 goto \u7684\u8BDD\uFF0C\u60F3\u8981\u5B8C\u5168\u8DF3\u51FA\u6240\u6709\u5FAA\u73AF\uFF0C\u5199\u8D77\u6765\u5F88\u9EBB\u70E6\u3002</p><p>goto \u7684\u53E6\u4E00\u4E2A\u7528\u9014\u662F\u63D0\u65E9\u7ED3\u675F\u591A\u91CD\u5224\u65AD\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">do_something</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> ERR<span class="token punctuation">)</span>
  <span class="token keyword">goto</span> error<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">do_something2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> ERR<span class="token punctuation">)</span>
  <span class="token keyword">goto</span> error<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">do_something3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> ERR<span class="token punctuation">)</span>
  <span class="token keyword">goto</span> error<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">do_something4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> ERR<span class="token punctuation">)</span>
  <span class="token keyword">goto</span> error<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u6709\u56DB\u4E2A\u5224\u65AD\uFF0C\u53EA\u8981\u6709\u4E00\u4E2A\u53D1\u73B0\u9519\u8BEF\uFF0C\u5C31\u4F7F\u7528 goto \u8DF3\u8FC7\u540E\u9762\u7684\u5224\u65AD\u3002</p><p>\u6CE8\u610F\uFF0Cgoto \u53EA\u80FD\u5728\u540C\u4E00\u4E2A\u51FD\u6570\u4E4B\u4E2D\u8DF3\u8F6C\uFF0C\u5E76\u4E0D\u80FD\u8DF3\u8F6C\u5230\u5176\u4ED6\u51FD\u6570\u3002</p>`,113),c=[o];function t(i,l){return s(),a("div",null,c)}const d=n(p,[["render",t],["__file","flow-control.html.vue"]]);export{d as default};
