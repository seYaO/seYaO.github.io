import{_ as n,o as s,c as a,e}from"./app.3b2d76f3.js";const p={},t=e(`<h1 id="stdlib-h" tabindex="-1"><a class="header-anchor" href="#stdlib-h" aria-hidden="true">#</a> stdlib.h</h1><h2 id="\u7C7B\u578B\u522B\u540D\u548C\u5B8F" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u522B\u540D\u548C\u5B8F" aria-hidden="true">#</a> \u7C7B\u578B\u522B\u540D\u548C\u5B8F</h2><p>stdlib.h \u5B9A\u4E49\u4E86\u4E0B\u9762\u7684\u7C7B\u578B\u522B\u540D\u3002</p><ul><li>size_t\uFF1Asizeof \u7684\u8FD4\u56DE\u7C7B\u578B\u3002</li><li>wchar_t\uFF1A\u5BBD\u5B57\u7B26\u7C7B\u578B\u3002</li></ul><p>stdlib.h \u5B9A\u4E49\u4E86\u4E0B\u9762\u7684\u5B8F\u3002</p><ul><li>NULL\uFF1A\u7A7A\u6307\u9488\u3002</li><li>EXIT_SUCCESS\uFF1A\u51FD\u6570\u8FD0\u884C\u6210\u529F\u65F6\u7684\u9000\u51FA\u72B6\u6001\u3002</li><li>EXIT_FAILURE\uFF1A\u51FD\u6570\u8FD0\u884C\u9519\u8BEF\u65F6\u7684\u9000\u51FA\u72B6\u6001\u3002</li><li>RAND_MAX\uFF1Arand() \u51FD\u6570\u53EF\u4EE5\u8FD4\u56DE\u7684\u6700\u5927\u503C\u3002</li><li>MB_CUR_MAX\uFF1A\u5F53\u524D\u8BED\u8A00\u73AF\u5883\u4E2D\uFF0C\u591A\u5B57\u8282\u5B57\u7B26\u5360\u7528\u7684\u6700\u5927\u5B57\u8282\u6570\u3002</li></ul><h2 id="abs-labs-llabs" tabindex="-1"><a class="header-anchor" href="#abs-labs-llabs" aria-hidden="true">#</a> abs()\uFF0Clabs()\uFF0Cllabs()</h2><p>\u8FD9\u4E09\u4E2A\u51FD\u6570\u7528\u4E8E\u8BA1\u7B97\u6574\u6570\u7684\u7EDD\u5BF9\u503C\u3002<code>abs()</code>\u7528\u4E8E int \u7C7B\u578B\uFF0C<code>labs()</code>\u7528\u4E8E long int \u7C7B\u578B\uFF0C<code>llabs()</code>\u7528\u4E8E long long int \u7C7B\u578B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> <span class="token keyword">int</span> <span class="token function">labs</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">int</span> <span class="token function">llabs</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u7528\u6CD5\u793A\u4F8B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// \u8F93\u51FA |-2| = 2</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;|-2| = %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8F93\u51FA |4|  = 4</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;|4|  = %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="div-ldiv-lldiv" tabindex="-1"><a class="header-anchor" href="#div-ldiv-lldiv" aria-hidden="true">#</a> div()\uFF0Cldiv()\uFF0Clldiv()</h2><p>\u8FD9\u4E09\u4E2A\u51FD\u6570\u7528\u6765\u8BA1\u7B97\u4E24\u4E2A\u53C2\u6570\u7684\u5546\u548C\u4F59\u6570\u3002<code>div()</code>\u7528\u4E8E int \u7C7B\u578B\u7684\u76F8\u9664\uFF0C<code>ldiv()</code>\u7528\u4E8E long int \u7C7B\u578B\u7684\u76F8\u9664\uFF0C<code>lldiv()</code>\u7528\u4E8E long long int \u7C7B\u578B\u7684\u76F8\u9664\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token class-name">div_t</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> numer<span class="token punctuation">,</span> <span class="token keyword">int</span> denom<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ldiv_t</span> <span class="token function">ldiv</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">int</span> numer<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">int</span> denom<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">lldiv_t</span> <span class="token function">lldiv</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">int</span> numer<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">int</span> denom<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E9B\u51FD\u6570\u628A\u7B2C2\u4E2A\u53C2\u6570\uFF08\u5206\u6BCD\uFF09\u9664\u4EE5\u7B2C1\u4E2A\u53C2\u6570\uFF08\u5206\u5B50\uFF09\uFF0C\u4EA7\u751F\u5546\u548C\u4F59\u6570\u3002\u8FD9\u4E24\u4E2A\u503C\u901A\u8FC7\u4E00\u4E2A\u6570\u636E\u7ED3\u6784\u8FD4\u56DE\uFF0C<code>div()</code>\u8FD4\u56DE div_t \u7ED3\u6784\uFF0C<code>ldiv()</code>\u8FD4\u56DE ldiv_t \u7ED3\u6784\uFF0C<code>lldiv()</code>\u8FD4\u56DE lldiv_t \u7ED3\u6784\u3002</p><p>\u8FD9\u4E9B\u7ED3\u6784\u90FD\u5305\u542B\u4E0B\u9762\u4E24\u4E2A\u5B57\u6BB5\uFF0C</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span>\u3000quot<span class="token punctuation">;</span>\u3000 <span class="token comment">//\u3000\u5546</span>
<span class="token keyword">int</span>\u3000rem<span class="token punctuation">;</span>\u3000 <span class="token comment">//\u3000\u4F59\u6570</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u4EEC\u5B8C\u6574\u7684\u5B9A\u4E49\u5982\u4E0B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> quot<span class="token punctuation">,</span> rem<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token class-name">div_t</span><span class="token punctuation">;</span>
    
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  <span class="token keyword">long</span> <span class="token keyword">int</span> quot<span class="token punctuation">,</span> rem<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token class-name">ldiv_t</span><span class="token punctuation">;</span>
    
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  <span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">int</span> quot<span class="token punctuation">,</span> rem<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token class-name">lldiv_t</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token class-name">div_t</span> d <span class="token operator">=</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8F93\u51FA 64 / -7 = -9</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;64 / -7 = %d\\n&quot;</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span>quot<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8F93\u51FA 64 % -7 = 1</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;64 %% -7 = %d\\n&quot;</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B57\u7B26\u4E32\u8F6C\u6210\u6570\u503C" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u8F6C\u6210\u6570\u503C" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u8F6C\u6210\u6570\u503C</h2><h3 id="a-\u7CFB\u5217\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#a-\u7CFB\u5217\u51FD\u6570" aria-hidden="true">#</a> a \u7CFB\u5217\u51FD\u6570</h3><p><code>stdlib.h</code>\u5B9A\u4E49\u4E86\u4E00\u7CFB\u5217\u51FD\u6570\uFF0C\u53EF\u4EE5\u5C06\u5B57\u7B26\u4E32\u8F6C\u4E3A\u6570\u5B57\u3002</p><ul><li>atoi()\uFF1A\u5B57\u7B26\u4E32\u8F6C\u6210 int \u7C7B\u578B\u3002</li><li>atof()\uFF1A\u5B57\u7B26\u4E32\u8F6C\u6210 double \u7C7B\u578B\u3002</li><li>atol()\uFF1A\u5B57\u7B26\u4E32\u8F6C\u6210 long int \u7C7B\u578B\u3002</li><li>atoll()\uFF1A\u5B57\u7B26\u4E32\u8F6C\u6210 long long int \u7C7B\u578B\u3002</li></ul><p>\u5B83\u4EEC\u7684\u539F\u578B\u5982\u4E0B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">atoi</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> nptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">double</span> <span class="token function">atof</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> nptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> <span class="token keyword">int</span> <span class="token function">atol</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> nptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">int</span> <span class="token function">atoll</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> nptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u51FD\u6570\u7684\u53C2\u6570\u90FD\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\u6307\u9488\uFF0C\u5B57\u7B26\u4E32\u5F00\u5934\u7684\u7A7A\u683C\u4F1A\u88AB\u5FFD\u7565\uFF0C\u8F6C\u6362\u5230\u7B2C\u4E00\u4E2A\u65E0\u6548\u5B57\u7B26\u5904\u505C\u6B62\u3002\u51FD\u6570\u540D\u79F0\u91CC\u9762\u7684<code>a</code>\u4EE3\u8868 ASCII\uFF0C\u6240\u4EE5<code>atoi()</code>\u7684\u610F\u601D\u662F\u201CASCII to int\u201D\u3002</p><p>\u5B83\u4EEC\u8FD4\u56DE\u8F6C\u6362\u540E\u7684\u6570\u503C\uFF0C\u5982\u679C\u5B57\u7B26\u4E32\u65E0\u6CD5\u8F6C\u6362\uFF0C\u5219\u8FD4\u56DE<code>0</code>\u3002</p><p>\u4E0B\u9762\u662F\u7528\u6CD5\u793A\u4F8B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">atoi</span><span class="token punctuation">(</span><span class="token string">&quot;3490&quot;</span><span class="token punctuation">)</span>   <span class="token comment">// 3490</span>
<span class="token function">atof</span><span class="token punctuation">(</span><span class="token string">&quot;3.141593&quot;</span><span class="token punctuation">)</span>   <span class="token comment">// 3.141593</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u53C2\u6570\u662F\u6570\u5B57\u5F00\u5934\u7684\u5B57\u7B26\u4E32\uFF0C<code>atoi()</code>\u4F1A\u53EA\u8F6C\u6362\u6570\u5B57\u90E8\u5206\uFF0C\u6BD4\u5982<code>atoi(&quot;42regular&quot;)</code>\u4F1A\u8FD4\u56DE\u6574\u6570<code>42</code>\u3002\u5982\u679C\u9996\u5B57\u7B26\u4E0D\u662F\u6570\u5B57\uFF0C\u6BD4\u5982\u201Chello world\u201D\uFF0C\u5219\u4F1A\u8FD4\u56DE<code>0</code>\u3002</p><h3 id="str-\u7CFB\u5217\u51FD\u6570-\u6D6E\u70B9\u6570\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#str-\u7CFB\u5217\u51FD\u6570-\u6D6E\u70B9\u6570\u8F6C\u6362" aria-hidden="true">#</a> str \u7CFB\u5217\u51FD\u6570\uFF08\u6D6E\u70B9\u6570\u8F6C\u6362\uFF09</h3><p><code>stdlib.h</code>\u8FD8\u5B9A\u4E49\u4E86\u4E00\u4E9B\u66F4\u5F3A\u529F\u80FD\u7684\u6D6E\u70B9\u6570\u8F6C\u6362\u51FD\u6570\u3002</p><ul><li>strtof()\uFF1A\u5B57\u7B26\u4E32\u8F6C\u6210 float \u7C7B\u578B\u3002</li><li>strtod()\uFF1A\u5B57\u7B26\u4E32\u8F6C\u6210 double \u7C7B\u578B\u3002</li><li>strtold()\uFF1A\u5B57\u7B26\u4E32\u8F6C\u6210 long double \u7C7B\u578B\u3002</li></ul><p>\u5B83\u4EEC\u7684\u539F\u578B\u5982\u4E0B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">float</span> <span class="token function">strtof</span><span class="token punctuation">(</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> restrict nptr<span class="token punctuation">,</span>
  <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> restrict endptr
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">double</span> <span class="token function">strtod</span><span class="token punctuation">(</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> restrict nptr<span class="token punctuation">,</span>
  <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> restrict endptr
<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token keyword">long</span> <span class="token keyword">double</span> <span class="token function">strtold</span><span class="token punctuation">(</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> restrict nptr<span class="token punctuation">,</span>
  <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> restrict endptr
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u4EEC\u90FD\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u9700\u8981\u8F6C\u6362\u7684\u5B57\u7B26\u4E32\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u6307\u9488\uFF0C\u6307\u5411\u539F\u59CB\u5B57\u7B26\u4E32\u91CC\u9762\u65E0\u6CD5\u8F6C\u6362\u7684\u90E8\u5206\u3002</p><ul><li><code>nptr</code>\uFF1A\u5F85\u8F6C\u6362\u7684\u5B57\u7B26\u4E32\uFF08\u8D77\u9996\u7684\u7A7A\u767D\u5B57\u7B26\u4F1A\u88AB\u5FFD\u7565\uFF09\u3002</li><li><code>endprt</code>\uFF1A\u4E00\u4E2A\u6307\u9488\uFF0C\u6307\u5411\u4E0D\u80FD\u8F6C\u6362\u90E8\u5206\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26\u3002\u5982\u679C\u5B57\u7B26\u4E32\u53EF\u4EE5\u5B8C\u5168\u8F6C\u6210\u6570\u503C\uFF0C\u8BE5\u6307\u9488\u6307\u5411\u5B57\u7B26\u4E32\u672B\u5C3E\u7684\u7EC8\u6B62\u7B26<code>\\0</code>\u3002\u8FD9\u4E2A\u53C2\u6570\u5982\u679C\u8BBE\u4E3A NULL\uFF0C\u5C31\u8868\u793A\u4E0D\u9700\u8981\u5904\u7406\u5B57\u7B26\u4E32\u5269\u4F59\u90E8\u5206\u3002</li></ul><p>\u5B83\u4EEC\u7684\u8FD4\u56DE\u503C\u662F\u5DF2\u7ECF\u8F6C\u6362\u540E\u7684\u6570\u503C\u3002\u5982\u679C\u5B57\u7B26\u4E32\u65E0\u6CD5\u8F6C\u6362\uFF0C\u5219\u8FD4\u56DE<code>0</code>\u3002\u5982\u679C\u8F6C\u6362\u7ED3\u679C\u53D1\u751F\u6EA2\u51FA\uFF0Cerrno \u4F1A\u88AB\u8BBE\u7F6E\u4E3A ERANGE\u3002\u5982\u679C\u503C\u592A\u5927\uFF08\u65E0\u8BBA\u662F\u6B63\u6570\u8FD8\u662F\u8D1F\u6570\uFF09\uFF0C\u51FD\u6570\u8FD4\u56DE<code>HUGE_VAL</code>\uFF1B\u5982\u679C\u503C\u592A\u5C0F\uFF0C\u51FD\u6570\u8FD4\u56DE\u96F6\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> <span class="token operator">*</span>inp <span class="token operator">=</span> <span class="token string">&quot;   123.4567abdc&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> <span class="token operator">*</span>badchar<span class="token punctuation">;</span>

<span class="token keyword">double</span> val <span class="token operator">=</span> <span class="token function">strtod</span><span class="token punctuation">(</span>inp<span class="token punctuation">,</span> <span class="token operator">&amp;</span>badchar<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%f\\n&quot;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 123.456700</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\n&quot;</span><span class="token punctuation">,</span> badchar<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// abdc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B57\u7B26\u4E32\u53EF\u4EE5\u5B8C\u5168\u8F6C\u6362\u7684\u60C5\u51B5\u4E0B\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u6307\u5411<code>\\0</code>\uFF0C\u56E0\u6B64\u53EF\u4EE5\u7528\u4E0B\u9762\u7684\u5199\u6CD5\u5224\u65AD\u662F\u5426\u5B8C\u5168\u8F6C\u6362\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">*</span>endptr <span class="token operator">==</span> <span class="token char">&#39;\\0&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5B8C\u5168\u8F6C\u6362</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5B58\u5728\u65E0\u6CD5\u8F6C\u6362\u7684\u5B57\u7B26</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4E0D\u5173\u5FC3\u6CA1\u6709\u8F6C\u6362\u7684\u90E8\u5206\uFF0C\u5219\u53EF\u4EE5\u5C06 endptr \u8BBE\u7F6E\u4E3A NULL\u3002</p><p>\u8FD9\u4E9B\u51FD\u6570\u8FD8\u53EF\u4EE5\u5C06\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u7279\u6B8A\u503C Infinity \u548C NaN\u3002\u5982\u679C\u5B57\u7B26\u4E32\u5305\u542B INF \u6216 INFINITY\uFF08\u5927\u5199\u6216\u5C0F\u5199\u7686\u53EF\uFF09\uFF0C\u5219\u5C06\u8F6C\u6362\u4E3A Infinity\uFF1B\u5982\u679C\u5B57\u7B26\u4E32\u5305\u542B NAN\uFF0C\u5219\u5C06\u8FD4\u56DE NaN\u3002</p><h3 id="str-\u7CFB\u5217\u51FD\u6570-\u6574\u6570\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#str-\u7CFB\u5217\u51FD\u6570-\u6574\u6570\u8F6C\u6362" aria-hidden="true">#</a> str \u7CFB\u5217\u51FD\u6570\uFF08\u6574\u6570\u8F6C\u6362\uFF09</h3><p>str \u7CFB\u5217\u51FD\u6570\u4E5F\u6709\u6574\u6570\u8F6C\u6362\u7684\u5BF9\u5E94\u51FD\u6570\u3002</p><ul><li>strtol()\uFF1A\u5B57\u7B26\u4E32\u8F6C\u6210 long int \u7C7B\u578B\u3002</li><li>strtoll()\uFF1A\u5B57\u7B26\u4E32\u8F6C\u6210 long long int \u7C7B\u578B\u3002</li><li>strtoul()\uFF1A\u5B57\u7B26\u4E32\u8F6C\u6210 unsigned long int \u7C7B\u578B\u3002</li><li>strtoull()\uFF1A\u5B57\u7B26\u4E32\u8F6C\u6210 unsigned long long int \u7C7B\u578B\u3002</li></ul><p>\u5B83\u4EEC\u7684\u539F\u578B\u5982\u4E0B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">long</span> <span class="token keyword">int</span> <span class="token function">strtol</span><span class="token punctuation">(</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> restrict nptr<span class="token punctuation">,</span>
  <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> restrict endptr<span class="token punctuation">,</span>
  <span class="token keyword">int</span> base
<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">int</span> <span class="token function">strtoll</span><span class="token punctuation">(</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> restrict nptr<span class="token punctuation">,</span>
  <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> restrict endptr<span class="token punctuation">,</span>
  <span class="token keyword">int</span> base
<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token keyword">int</span> <span class="token function">strtoul</span><span class="token punctuation">(</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> restrict nptr<span class="token punctuation">,</span>
  <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> restrict endptr<span class="token punctuation">,</span>
  <span class="token keyword">int</span> base
<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">int</span> <span class="token function">strtoull</span><span class="token punctuation">(</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> restrict nptr<span class="token punctuation">,</span>
  <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> restrict endptr<span class="token punctuation">,</span> <span class="token keyword">int</span> base
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u4EEC\u63A5\u53D7\u4E09\u4E2A\u53C2\u6570\u3002</p><p>\uFF081\uFF09<code>nPtr</code>\uFF1A\u5F85\u8F6C\u6362\u7684\u5B57\u7B26\u4E32\uFF08\u8D77\u9996\u7684\u7A7A\u767D\u5B57\u7B26\u4F1A\u88AB\u5FFD\u7565\uFF09\u3002</p><p>\uFF082\uFF09<code>endPrt</code>\uFF1A\u4E00\u4E2A\u6307\u9488\uFF0C\u6307\u5411\u4E0D\u80FD\u8F6C\u6362\u90E8\u5206\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26\u3002\u5982\u679C\u5B57\u7B26\u4E32\u53EF\u4EE5\u5B8C\u5168\u8F6C\u6210\u6570\u503C\uFF0C\u8BE5\u6307\u9488\u6307\u5411\u5B57\u7B26\u4E32\u672B\u5C3E\u7684\u7EC8\u6B62\u7B26<code>\\0</code>\u3002\u8FD9\u4E2A\u53C2\u6570\u5982\u679C\u8BBE\u4E3A NULL\uFF0C\u5C31\u8868\u793A\u4E0D\u9700\u8981\u5904\u7406\u5B57\u7B26\u4E32\u5269\u4F59\u90E8\u5206\u3002</p><p>\uFF083\uFF09<code>base</code>\uFF1A\u5F85\u8F6C\u6362\u6574\u6570\u7684\u8FDB\u5236\u3002\u8FD9\u4E2A\u503C\u5E94\u8BE5\u662F<code>2</code>\u5230<code>36</code>\u4E4B\u95F4\u7684\u6574\u6570\uFF0C\u4EE3\u8868\u76F8\u5E94\u7684\u8FDB\u5236\uFF0C\u5982\u679C\u662F\u7279\u6B8A\u503C<code>0</code>\uFF0C\u8868\u793A\u8BA9\u51FD\u6570\u6839\u636E\u6570\u503C\u7684\u524D\u7F00\uFF0C\u81EA\u5DF1\u786E\u5B9A\u8FDB\u5236\uFF0C\u5373\u5982\u679C\u6570\u5B57\u6709\u524D\u7F00<code>0</code>\uFF0C\u5219\u4E3A\u516B\u8FDB\u5236\uFF0C\u5982\u679C\u6570\u5B57\u6709\u524D\u7F00<code>0x</code>\u6216<code>0X</code>\uFF0C\u5219\u4E3A\u5341\u516D\u8FDB\u5236\u3002</p><p>\u5B83\u4EEC\u7684\u8FD4\u56DE\u503C\u662F\u8F6C\u6362\u540E\u7684\u6570\u503C\uFF0C\u5982\u679C\u8F6C\u6362\u4E0D\u6210\u529F\uFF0C\u8FD4\u56DE<code>0</code>\u3002</p><p>\u4E0B\u9762\u662F\u8F6C\u6362\u5341\u8FDB\u5236\u6574\u6570\u7684\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span><span class="token operator">*</span> s <span class="token operator">=</span> <span class="token string">&quot;3490&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token function">strtoul</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%lu\\n&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3490</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u8F6C\u6362\u5341\u516D\u8FDB\u5236\u6574\u6570\u7684\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span><span class="token operator">*</span> end<span class="token punctuation">;</span>

<span class="token keyword">long</span> value <span class="token operator">=</span> <span class="token function">strtol</span><span class="token punctuation">(</span><span class="token string">&quot;0xff&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>end<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%ld\\n&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 255</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\n&quot;</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u65E0\u5185\u5BB9</span>

value <span class="token operator">=</span> <span class="token function">strtol</span><span class="token punctuation">(</span><span class="token string">&quot;0xffxx&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>end<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%ld\\n&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 255</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\n&quot;</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// xx</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>strtol()</code>\u53EF\u4EE5\u6307\u5B9A\u5B57\u7B26\u4E32\u5305\u542B\u7684\u662F16\u8FDB\u5236\u6574\u6570\u3002\u4E0D\u80FD\u8F6C\u6362\u7684\u90E8\u5206\uFF0C\u53EF\u4EE5\u4F7F\u7528\u6307\u9488<code>end</code>\u8FDB\u884C\u8BBF\u95EE\u3002</p><p>\u4E0B\u9762\u662F\u8F6C\u6362\u4E8C\u8FDB\u5236\u6574\u6570\u7684\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span><span class="token operator">*</span> s <span class="token operator">=</span> <span class="token string">&quot;101010&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token function">strtoul</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%lu\\n&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 42</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u8BA9\u51FD\u6570\u81EA\u884C\u5224\u65AD\u6574\u6570\u8FDB\u5236\u7684\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> string <span class="token operator">=</span> <span class="token string">&quot;-1234567abc&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">char</span><span class="token operator">*</span> remainderPtr<span class="token punctuation">;</span>
  <span class="token keyword">long</span> x <span class="token operator">=</span> <span class="token function">strtol</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> <span class="token operator">&amp;</span>remainderPtr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\&quot;%s\\&quot;\\n%s%ld\\n%s\\&quot;%s\\&quot;\\n&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;The original string is &quot;</span><span class="token punctuation">,</span>
    string<span class="token punctuation">,</span>
    <span class="token string">&quot;The converted value is &quot;</span><span class="token punctuation">,</span>
    x<span class="token punctuation">,</span>
    <span class="token string">&quot;The remainder of the original string is &quot;</span><span class="token punctuation">,</span>
    remainderPtr
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u7684\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>The original string is <span class="token string">&quot;-1234567abc&quot;</span>
The converted value is <span class="token operator">-</span><span class="token number">1234567</span>
The remainder of the original string is <span class="token string">&quot;abc&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u88AB\u8F6C\u6362\u7684\u503C\u592A\u5927\uFF0C<code>strtol()</code>\u51FD\u6570\u5728<code>errno</code>\u4E2D\u5B58\u50A8<code>ERANGE</code>\u8FD9\u4E2A\u503C\uFF0C\u5E76\u8FD4\u56DE<code>LONG_MIN</code>\uFF08\u539F\u503C\u4E3A\u8D1F\u6570\uFF09\u6216<code>LONG_MAX</code>\uFF08\u539F\u503C\u4E3A\u6B63\u6570\uFF09\uFF0C<code>strtoul()</code>\u5219\u8FD4\u56DE<code>ULONG_MAX</code>\u3002</p><h2 id="rand" tabindex="-1"><a class="header-anchor" href="#rand" aria-hidden="true">#</a> rand()</h2><p><code>rand()</code>\u51FD\u6570\u7528\u6765\u751F\u6210 0\uFF5ERAND_MAX \u4E4B\u95F4\u7684\u968F\u673A\u6574\u6570\u3002<code>RAND_MAX</code>\u662F\u4E00\u4E2A\u5B9A\u4E49\u5728<code>stdlib.h</code>\u91CC\u9762\u7684\u5B8F\uFF0C\u901A\u5E38\u7B49\u4E8E INT_MAX\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// \u539F\u578B</span>
<span class="token keyword">int</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u793A\u4F8B</span>
<span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u5E0C\u671B\u83B7\u5F97\u6574\u6570 N \u5230 M \u4E4B\u95F4\u7684\u968F\u673A\u6570\uFF08\u5305\u62EC N \u548C M \u4E24\u4E2A\u7AEF\u70B9\u503C\uFF09\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4E0B\u9762\u7684\u5199\u6CD5\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> \uFF08M <span class="token operator">-</span> N <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> N<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6BD4\u5982\uFF0C1 \u5230 6 \u4E4B\u95F4\u7684\u968F\u673A\u6570\uFF0C\u5199\u6CD5\u5982\u4E0B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">6</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u83B7\u5F97\u6D6E\u70B9\u6570\u7684\u968F\u673A\u503C\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4E0B\u9762\u7684\u5199\u6CD5\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// 0 \u5230 0.999999 \u4E4B\u95F4\u7684\u968F\u673A\u6570</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;0 to 0.99999: %f\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>RAND_MAX <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// n \u5230 m \u4E4B\u95F4\u7684\u968F\u673A\u6570\uFF1A</span>
<span class="token comment">// n + m * (rand() / (float)RAND_MAX)</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;10.5 to 15.7: %f\\n&quot;</span><span class="token punctuation">,</span> <span class="token number">10.5</span> <span class="token operator">+</span> <span class="token number">5.2</span> <span class="token operator">*</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>RAND_MAX<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u7531\u4E8E<code>rand()</code>\u548C<code>RAND_MAX</code>\u90FD\u662F int \u7C7B\u578B\uFF0C\u8981\u7528\u663E\u793A\u7684\u7C7B\u578B\u8F6C\u6362\u8F6C\u4E3A\u6D6E\u70B9\u6570\u3002</p><h2 id="srand" tabindex="-1"><a class="header-anchor" href="#srand" aria-hidden="true">#</a> srand()</h2><p><code>rand()</code>\u662F\u4F2A\u968F\u673A\u6570\u51FD\u6570\uFF0C\u4E3A\u4E86\u589E\u52A0\u968F\u673A\u6027\uFF0C\u5FC5\u987B\u5728\u8C03\u7528\u5B83\u4E4B\u524D\uFF0C\u4F7F\u7528<code>srand()</code>\u51FD\u6570\u91CD\u7F6E\u4E00\u4E0B\u79CD\u5B50\u503C\u3002</p><p><code>srand()</code>\u51FD\u6570\u63A5\u53D7\u4E00\u4E2A\u65E0\u7B26\u53F7\u6574\u6570\uFF08unsigned int\uFF09\u4F5C\u4E3A\u79CD\u5B50\u503C\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">srand</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> seed<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u901A\u5E38\u4F7F\u7528<code>time(NULL)</code>\u51FD\u6570\u8FD4\u56DE\u5F53\u524D\u8DDD\u79BB\u65F6\u95F4\u7EAA\u5143\u7684\u79D2\u6570\uFF0C\u4F5C\u4E3A<code>srand()</code>\u7684\u53C2\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;time.h&gt;</span></span>
<span class="token function">srand</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>time()</code>\u7684\u539F\u578B\u5B9A\u4E49\u5728\u5934\u6587\u4EF6<code>time.h</code>\u91CC\u9762\uFF0C\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\u662F\u7C7B\u578B\u522B\u540D<code>time_t</code>\uFF0C\u5177\u4F53\u7684\u7C7B\u578B\u4E0E\u7CFB\u7EDF\u6709\u5173\uFF0C\u6240\u4EE5\u8981\u5F3A\u5236\u8F6C\u6362\u4E00\u4E0B\u7C7B\u578B\u3002<code>time()</code>\u7684\u53C2\u6570\u662F\u4E00\u4E2A\u6307\u9488\uFF0C\u6307\u5411\u4E00\u4E2A\u5177\u4F53\u7684 time_t \u7C7B\u578B\u7684\u65F6\u95F4\u503C\uFF0C\u8FD9\u91CC\u4F20\u5165\u7A7A\u6307\u9488<code>NULL</code>\u4F5C\u4E3A\u53C2\u6570\uFF0C\u7531\u4E8E NULL \u4E00\u822C\u662F<code>0</code>\uFF0C\u6240\u4EE5\u4E5F\u53EF\u4EE5\u5199\u6210<code>time(0)</code>\u3002</p><h2 id="abort" tabindex="-1"><a class="header-anchor" href="#abort" aria-hidden="true">#</a> abort()</h2><p><code>abort()</code>\u7528\u4E8E\u4E0D\u6B63\u5E38\u5730\u7EC8\u6B62\u4E00\u4E2A\u6B63\u5728\u6267\u884C\u7684\u7A0B\u5E8F\u3002\u4F7F\u7528\u8FD9\u4E2A\u51FD\u6570\u7684\u76EE\u7684\uFF0C\u4E3B\u8981\u662F\u5B83\u4F1A\u89E6\u53D1 SIGABRT \u4FE1\u53F7\uFF0C\u5F00\u53D1\u8005\u53EF\u4EE5\u5728\u7A0B\u5E8F\u4E2D\u4E3A\u8FD9\u4E2A\u4FE1\u53F7\u8BBE\u7F6E\u4E00\u4E2A\u5904\u7406\u51FD\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">abort</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8BE5\u51FD\u6570\u6CA1\u6709\u53C2\u6570\u3002</p><h2 id="exit-quick-exit-exit" tabindex="-1"><a class="header-anchor" href="#exit-quick-exit-exit" aria-hidden="true">#</a> exit()\uFF0Cquick_exit()\uFF0C_Exit()</h2><p>\u8FD9\u4E09\u4E2A\u51FD\u6570\u90FD\u7528\u6765\u9000\u51FA\u5F53\u524D\u6B63\u5728\u6267\u884C\u7684\u7A0B\u5E8F\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token keyword">int</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">quick_exit</span><span class="token punctuation">(</span><span class="token keyword">int</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">_Exit</span><span class="token punctuation">(</span><span class="token keyword">int</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u4EEC\u90FD\u63A5\u53D7\u4E00\u4E2A\u6574\u6570\uFF0C\u8868\u793A\u7A0B\u5E8F\u7684\u9000\u51FA\u72B6\u6001\uFF0C<code>0</code>\u662F\u6B63\u5E38\u9000\u51FA\uFF0C\u975E\u96F6\u503C\u8868\u793A\u53D1\u751F\u9519\u8BEF\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5B8F<code>EXIT_SUCCESS</code>\u548C<code>EXIT_FAILURE</code>\u5F53\u4F5C\u53C2\u6570\u3002\u5B83\u4EEC\u672C\u8EAB\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</p><p>\u5B83\u4EEC\u7684\u533A\u522B\u662F\uFF0C\u9000\u51FA\u65F6\u6240\u505A\u7684\u6E05\u7406\u5DE5\u4F5C\u4E0D\u540C\u3002<code>exit()</code>\u662F\u6B63\u5E38\u9000\u51FA\uFF0C\u7CFB\u7EDF\u4F1A\u505A\u5B8C\u6574\u7684\u6E05\u7406\uFF0C\u6BD4\u5982\u66F4\u65B0\u6240\u6709\u6587\u4EF6\u6D41\uFF0C\u5E76\u4E14\u5220\u9664\u4E34\u65F6\u6587\u4EF6\u3002<code>quick_exit()</code>\u662F\u5FEB\u901F\u9000\u51FA\uFF0C\u7CFB\u7EDF\u7684\u6E05\u7406\u5DE5\u4F5C\u7A0D\u5FAE\u5C11\u4E00\u70B9\u3002<code>_Exit()</code>\u662F\u7ACB\u5373\u9000\u51FA\uFF0C\u4E0D\u505A\u4EFB\u4F55\u6E05\u7406\u5DE5\u4F5C\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E9B\u7528\u6CD5\u793A\u4F8B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">exit</span><span class="token punctuation">(</span>EXIT_SUCCESS<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">quick_exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">_Exit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="atexit-at-quick-exit" tabindex="-1"><a class="header-anchor" href="#atexit-at-quick-exit" aria-hidden="true">#</a> atexit()\uFF0Cat_quick_exit()</h2><p><code>atexit()</code>\u7528\u6765\u767B\u8BB0\u5F53\u524D\u7A0B\u5E8F\u9000\u51FA\u65F6\uFF08\u8C03\u7528<code>exit()</code>\u6216<code>main()</code>\u6B63\u5E38\u9000\u51FA\uFF09\uFF0C\u6240\u8981\u6267\u884C\u7684\u5176\u4ED6\u51FD\u6570\u3002</p><p><code>at_quick_exit()</code>\u5219\u662F\u767B\u8BB0\u4F7F\u7528<code>quick_exit()</code>\u65B9\u6CD5\u9000\u51FA\u5F53\u524D\u7A0B\u5E8F\u65F6\uFF0C\u6240\u8981\u6267\u884C\u7684\u5176\u4ED6\u51FD\u6570\u3002</p><p><code>exit()</code>\u53EA\u80FD\u89E6\u53D1<code>atexit()</code>\u767B\u8BB0\u7684\u51FD\u6570\uFF0C<code>quick_exit()</code>\u53EA\u80FD\u89E6\u53D1<code>at_quick_exit()</code>\u767B\u8BB0\u7684\u51FD\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">atexit</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>func<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">at_quick_exit</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>func<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u4EEC\u7684\u53C2\u6570\u662F\u8981\u6267\u884C\u7684\u51FD\u6570\u5730\u5740\uFF0C\u5373\u51FD\u6570\u540D\u3002\u5B83\u4EEC\u7684\u8FD4\u56DE\u503C\u90FD\u662F\u8C03\u7528\u6210\u529F\u65F6\u8FD4\u56DE<code>0</code>\uFF0C\u8C03\u7528\u5931\u8D25\u65F6\u8FD4\u56DE\u975E\u96F6\u503C\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">sign_off</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">too_bad</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token keyword">int</span> n<span class="token punctuation">;</span>
  <span class="token function">atexit</span><span class="token punctuation">(</span>sign_off<span class="token punctuation">)</span><span class="token punctuation">;</span>\u3000\u3000 <span class="token comment">/* \u6CE8\u518C sign_off()\u51FD\u6570 */</span>

  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;Enter an integer:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;That&#39;s no integer!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">atexit</span><span class="token punctuation">(</span>too_bad<span class="token punctuation">)</span><span class="token punctuation">;</span>\u3000<span class="token comment">/* \u6CE8\u518C too_bad()\u51FD\u6570 */</span>
    <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d is %s.\\n&quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">,</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot;even&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;odd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">sign_off</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;sign_off&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">too_bad</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;too bad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u7528\u6237\u8F93\u5165\u5931\u8D25\u65F6\uFF0C\u4F1A\u8C03\u7528<code>sign_off()</code>\u548C<code>too_bad()</code>\u51FD\u6570\uFF1B\u4F46\u662F\u8F93\u5165\u6210\u529F\u65F6\u53EA\u4F1A\u8C03\u7528<code>sign_off()</code>\u3002\u56E0\u4E3A\u53EA\u6709\u8F93\u5165\u5931\u8D25\u65F6\uFF0C\u624D\u4F1A\u8FDB\u5165<code>if</code>\u8BED\u53E5\u767B\u8BB0<code>too_bad()</code>\u3002</p><p>\u53E6\u5916\uFF0C\u5982\u679C\u6709\u591A\u6761<code>atexit()</code>\u8BED\u53E5\uFF0C\u51FD\u6570\u9000\u51FA\u65F6\u6700\u5148\u8C03\u7528\u7684\uFF0C\u662F\u6700\u540E\u4E00\u4E2A\u767B\u8BB0\u7684\u51FD\u6570\u3002</p><p><code>atexit()</code>\u767B\u8BB0\u7684\u51FD\u6570\uFF08\u5982\u4E0A\u4F8B\u7684<code>sign_off</code>\u548C<code>too_bad</code>\uFF09\u5E94\u8BE5\u4E0D\u5E26\u4EFB\u4F55\u53C2\u6570\u4E14\u8FD4\u56DE\u7C7B\u578B\u4E3A<code>void</code>\u3002\u901A\u5E38\uFF0C\u8FD9\u4E9B\u51FD\u6570\u4F1A\u6267\u884C\u4E00\u4E9B\u6E05\u7406\u4EFB\u52A1\uFF0C\u4F8B\u5982\u5220\u9664\u4E34\u65F6\u6587\u4EF6\u6216\u91CD\u7F6E\u73AF\u5883\u53D8\u91CF\u3002</p><p><code>at_quick_exit()</code>\u4E5F\u662F\u540C\u6837\u7684\u89C4\u5219\uFF0C\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">exit_handler_1</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;1\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">exit_handler_2</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;2\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">at_quick_exit</span><span class="token punctuation">(</span>exit_handler_1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">at_quick_exit</span><span class="token punctuation">(</span>exit_handler_2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">quick_exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u4E0A\u9762\u7684\u793A\u4F8B\uFF0C\u547D\u4EE4\u884C\u4F1A\u5148\u8F93\u51FA2\uFF0C\u518D\u8F93\u51FA1\u3002</p><h2 id="getenv" tabindex="-1"><a class="header-anchor" href="#getenv" aria-hidden="true">#</a> getenv()</h2><p><code>getenv()</code>\u7528\u4E8E\u83B7\u53D6\u73AF\u5883\u53D8\u91CF\u7684\u503C\u3002\u73AF\u5883\u53D8\u91CF\u662F\u64CD\u4F5C\u7CFB\u7EDF\u63D0\u4F9B\u7684\u7A0B\u5E8F\u4E4B\u5916\u7684\u4E00\u4E9B\u73AF\u5883\u53C2\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span><span class="token operator">*</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5B83\u7684\u53C2\u6570\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u8868\u793A\u73AF\u5883\u53D8\u91CF\u540D\u3002\u8FD4\u56DE\u503C\u4E5F\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u8868\u793A\u73AF\u5883\u53D8\u91CF\u7684\u503C\u3002\u5982\u679C\u6307\u5B9A\u7684\u73AF\u5883\u53D8\u91CF\u4E0D\u5B58\u5728\uFF0C\u5219\u8FD4\u56DE NULL\u3002</p><p>\u4E0B\u9762\u662F\u8F93\u51FA\u73AF\u5883\u53D8\u91CF<code>$PATH</code>\u7684\u503C\u7684\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;PATH is %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">&quot;PATH&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="system" tabindex="-1"><a class="header-anchor" href="#system" aria-hidden="true">#</a> system()</h2><p><code>system()</code>\u51FD\u6570\u7528\u4E8E\u6267\u884C\u5916\u90E8\u7A0B\u5E8F\u3002\u5B83\u4F1A\u628A\u5B83\u7684\u53C2\u6570\u5B57\u7B26\u4E32\u4F20\u9012\u7ED9\u64CD\u4F5C\u7CFB\u7EDF\uFF0C\u8BA9\u64CD\u4F5C\u7CFB\u7EDF\u7684\u547D\u4EE4\u5904\u7406\u5668\u6765\u6267\u884C\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">system</span><span class="token punctuation">(</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span> command <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u56E0\u7F16\u8BD1\u5668\u800C\u5F02\u3002\u4F46\u662F\u6807\u51C6\u89C4\u5B9A\uFF0C\u5982\u679C NULL \u4F5C\u4E3A\u53C2\u6570\uFF0C\u8868\u793A\u8BE2\u95EE\u64CD\u4F5C\u7CFB\u7EDF\uFF0C\u662F\u5426\u6709\u53EF\u7528\u7684\u547D\u4EE4\u5904\u7406\u5668\uFF0C\u5982\u679C\u6709\u7684\u8BDD\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u975E\u96F6\u503C\uFF0C\u5426\u5219\u8FD4\u56DE\u96F6\u3002</p><p>\u4E0B\u9762\u662F\u6267\u884C<code>ls</code>\u547D\u4EE4\u7684\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;ls -l&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u5185\u5B58\u7BA1\u7406\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u5185\u5B58\u7BA1\u7406\u51FD\u6570" aria-hidden="true">#</a> \u5185\u5B58\u7BA1\u7406\u51FD\u6570</h2><p>stdlib.h \u63D0\u4F9B\u4E86\u4E00\u4E9B\u5185\u5B58\u64CD\u4F5C\u51FD\u6570\uFF0C\u4E0B\u9762\u51E0\u4E2A\u51FD\u6570\u8BE6\u89C1\u300A\u5185\u5B58\u7BA1\u7406\u300B\u4E00\u7AE0\uFF0C\u5176\u4F59\u5728\u672C\u8282\u4ECB\u7ECD\u3002</p><ul><li>malloc()\uFF1A\u5206\u914D\u5185\u5B58\u533A\u57DF</li><li>calloc()\uFF1A\u5206\u914D\u5185\u5B58\u533A\u57DF\u3002</li><li>realloc()\uFF1A\u8C03\u8282\u5185\u5B58\u533A\u57DF\u5927\u5C0F\u3002</li><li>free()\uFF1A\u91CA\u653E\u5185\u5B58\u533A\u57DF\u3002</li></ul><h3 id="aligned-alloc" tabindex="-1"><a class="header-anchor" href="#aligned-alloc" aria-hidden="true">#</a> aligned_alloc()</h3><p>\u5F88\u591A\u7CFB\u7EDF\u6709\u5185\u5B58\u5BF9\u9F50\u7684\u8981\u6C42\uFF0C\u5373\u5185\u5B58\u5757\u7684\u5927\u5C0F\u5FC5\u987B\u662F\u67D0\u4E2A\u503C\uFF08\u6BD4\u598264\u5B57\u8282\uFF09\u7684\u500D\u6570\uFF0C\u8FD9\u6837\u6709\u5229\u4E8E\u63D0\u9AD8\u5904\u7406\u901F\u5EA6\u3002<code>aligned_alloc()</code>\u5C31\u7528\u4E8E\u5206\u914D\u6EE1\u8DB3\u5185\u5B58\u5BF9\u9F50\u8981\u6C42\u7684\u5185\u5B58\u5757\uFF0C\u5B83\u7684\u539F\u578B\u5982\u4E0B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">aligned_alloc</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> alignment<span class="token punctuation">,</span> <span class="token class-name">size_t</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5B83\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\u3002</p><ul><li>alignment\uFF1A\u6574\u6570\uFF0C\u8868\u793A\u5185\u5B58\u5BF9\u9F50\u7684\u5355\u4F4D\u5927\u5C0F\uFF0C\u4E00\u822C\u662F2\u7684\u6574\u6570\u6B21\u5E42\uFF082\u30014\u30018\u300116\u2026\u2026\uFF09\u3002</li><li>size\uFF1A\u6574\u6570\uFF0C\u8868\u793A\u5185\u5B58\u5757\u7684\u5927\u5C0F\u3002</li></ul><p>\u5206\u914D\u6210\u529F\u65F6\uFF0C\u5B83\u8FD4\u56DE\u4E00\u4E2A\u65E0\u7C7B\u578B\u6307\u9488\uFF0C\u6307\u5411\u65B0\u5206\u914D\u7684\u5185\u5B58\u5757\u3002\u5206\u914D\u5931\u8D25\u65F6\uFF0C\u8FD4\u56DE NULL\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token function">aligned_alloc</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>aligned_alloc()</code>\u5206\u914D\u7684\u5185\u5B58\u5757\uFF0C\u5355\u4F4D\u5927\u5C0F\u662F64\u5B57\u8282\uFF0C\u8981\u5206\u914D\u7684\u5B57\u8282\u6570\u662F256\u5B57\u8282\u3002</p><h2 id="qsort" tabindex="-1"><a class="header-anchor" href="#qsort" aria-hidden="true">#</a> qsort()</h2><p><code>qsort()</code>\u7528\u6765\u5FEB\u901F\u6392\u5E8F\u4E00\u4E2A\u6570\u7EC4\u3002\u5B83\u5BF9\u6570\u7EC4\u6210\u5458\u7684\u7C7B\u578B\u6CA1\u6709\u8981\u6C42\uFF0C\u4EFB\u4F55\u7C7B\u578B\u6570\u7EC4\u90FD\u53EF\u4EE5\u7528\u8FD9\u4E2A\u51FD\u6570\u6392\u5E8F\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">qsort</span><span class="token punctuation">(</span>
  <span class="token keyword">void</span> <span class="token operator">*</span>base<span class="token punctuation">,</span>
  <span class="token class-name">size_t</span> nmemb<span class="token punctuation">,</span> 
  <span class="token class-name">size_t</span> size<span class="token punctuation">,</span>
  <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>compar<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u51FD\u6570\u63A5\u53D7\u56DB\u4E2A\u53C2\u6570\u3002</p><ul><li>base\uFF1A\u6307\u5411\u8981\u6392\u5E8F\u7684\u6570\u7EC4\u5F00\u59CB\u4F4D\u7F6E\u7684\u6307\u9488\u3002</li><li>nmemb\uFF1A\u6570\u7EC4\u6210\u5458\u7684\u6570\u91CF\u3002</li><li>size\uFF1A\u6570\u7EC4\u6BCF\u4E2A\u6210\u5458\u5360\u7528\u7684\u5B57\u8282\u957F\u5EA6\u3002</li><li>compar\uFF1A\u4E00\u4E2A\u51FD\u6570\u6307\u9488\uFF0C\u6307\u5411\u4E00\u4E2A\u6BD4\u8F83\u4E24\u4E2A\u6210\u5458\u7684\u51FD\u6570\u3002</li></ul><p>\u6BD4\u8F83\u51FD\u6570<code>compar</code>\u5C06\u6307\u5411\u6570\u7EC4\u4E24\u4E2A\u6210\u5458\u7684\u6307\u9488\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5E76\u6BD4\u8F83\u4E24\u4E2A\u6210\u5458\u3002\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u5C0F\u4E8E\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u8BE5\u51FD\u6570\u5E94\u8BE5\u8FD4\u56DE\u4E00\u4E2A\u8D1F\u503C\uFF1B\u5982\u679C\u4E24\u4E2A\u51FD\u6570\u76F8\u7B49\uFF0C\u8FD4\u56DE<code>0</code>\uFF1B\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u5927\u4E8E\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u5E94\u8BE5\u8FD4\u56DE\u4E00\u4E2A\u6B63\u6570\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u7528\u6CD5\u793A\u4F8B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">compar</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">void</span><span class="token operator">*</span> elem0<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span><span class="token operator">*</span> elem1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token keyword">int</span><span class="token operator">*</span> x <span class="token operator">=</span> elem0<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token keyword">int</span><span class="token operator">*</span> y <span class="token operator">=</span> elem1<span class="token punctuation">;</span> 
  
  <span class="token keyword">return</span> <span class="token operator">*</span>x <span class="token operator">-</span> <span class="token operator">*</span>y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">qsort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">,</span> compar<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u4E0A\u9762\u793A\u4F8B\uFF0C\u4F1A\u8F93\u51FA\u6392\u5E8F\u597D\u7684\u6570\u7EC4\u201C1 2 3 6 8 10 13 14 17\u201D\u3002</p><h2 id="bsearch" tabindex="-1"><a class="header-anchor" href="#bsearch" aria-hidden="true">#</a> bsearch()</h2><p><code>bsearch()</code>\u4F7F\u7528\u4E8C\u5206\u6CD5\u641C\u7D22\uFF0C\u5728\u6570\u7EC4\u4E2D\u641C\u7D22\u4E00\u4E2A\u503C\u3002\u5B83\u5BF9\u6570\u7EC4\u6210\u5458\u7684\u7C7B\u578B\u6CA1\u6709\u8981\u6C42\uFF0C\u4EFB\u4F55\u7C7B\u578B\u6570\u7EC4\u90FD\u53EF\u4EE5\u7528\u8FD9\u4E2A\u51FD\u6570\u641C\u7D22\u503C\u3002</p><p>\u6CE8\u610F\uFF0C\u8BE5\u65B9\u6CD5\u53EA\u5BF9\u5DF2\u7ECF\u6392\u5E8F\u597D\u7684\u6570\u7EC4\u6709\u6548\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">bsearch</span><span class="token punctuation">(</span>
  <span class="token keyword">const</span> <span class="token keyword">void</span><span class="token operator">*</span> key<span class="token punctuation">,</span>
  <span class="token keyword">const</span> <span class="token keyword">void</span><span class="token operator">*</span> base<span class="token punctuation">,</span>
  <span class="token class-name">size_t</span> nmemb<span class="token punctuation">,</span>
  <span class="token class-name">size_t</span> size<span class="token punctuation">,</span>
  <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>compar<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u51FD\u6570\u63A5\u53D75\u4E2A\u53C2\u6570\u3002</p><ul><li>key\uFF1A\u6307\u5411\u8981\u67E5\u627E\u7684\u503C\u7684\u6307\u9488\u3002</li><li>base\uFF1A\u6307\u5411\u6570\u7EC4\u5F00\u59CB\u4F4D\u7F6E\u7684\u6307\u9488\uFF0C\u6570\u7EC4\u5FC5\u987B\u5DF2\u7ECF\u6392\u5E8F\u3002</li><li>nmemb\uFF1A\u6570\u7EC4\u6210\u5458\u7684\u6570\u91CF\u3002</li><li>size\uFF1A\u6570\u7EC4\u6BCF\u4E2A\u6210\u5458\u5360\u7528\u7684\u5B57\u8282\u957F\u5EA6\u3002</li><li>compar\uFF1A\u6307\u5411\u4E00\u4E2A\u5C06\u5F85\u67E5\u627E\u503C\u4E0E\u5176\u4ED6\u503C\u8FDB\u884C\u6BD4\u8F83\u7684\u51FD\u6570\u7684\u6307\u9488\u3002</li></ul><p>\u6BD4\u8F83\u51FD\u6570<code>compar</code>\u5C06\u5F85\u67E5\u627E\u7684\u503C\u4F5C\u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u5C06\u8981\u6BD4\u8F83\u7684\u503C\u4F5C\u4E3A\u7B2C\u4E8C\u4E2A\u53C2\u6570\u3002\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u5C0F\u4E8E\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u8BE5\u51FD\u6570\u5E94\u8BE5\u8FD4\u56DE\u4E00\u4E2A\u8D1F\u503C\uFF1B\u5982\u679C\u4E24\u4E2A\u53C2\u6570\u76F8\u7B49\uFF0C\u8FD4\u56DE<code>0</code>\uFF1B\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u5927\u4E8E\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6B63\u503C\u3002</p><p>\u5982\u679C\u627E\u5230\u5F85\u67E5\u627E\u7684\u503C\uFF0C<code>bsearch()</code>\u8FD4\u56DE\u6307\u5411\u8BE5\u503C\u7684\u6307\u9488\uFF0C\u5982\u679C\u627E\u4E0D\u5230\uFF0C\u8FD4\u56DE NULL\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u7528\u6CD5\u793A\u4F8B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">compar</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>key<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token keyword">int</span><span class="token operator">*</span> k <span class="token operator">=</span> key<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token keyword">int</span><span class="token operator">*</span> v <span class="token operator">=</span> value<span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token operator">*</span>k <span class="token operator">-</span> <span class="token operator">*</span>v<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">int</span><span class="token operator">*</span> r<span class="token punctuation">;</span>
  <span class="token keyword">int</span> key<span class="token punctuation">;</span>

  key <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span> <span class="token comment">// \u5305\u62EC\u5728\u6570\u7EC4\u4E2D</span>
  r <span class="token operator">=</span> <span class="token function">bsearch</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>key<span class="token punctuation">,</span> a<span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">,</span> compar<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Found %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>

  key <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>  <span class="token comment">// \u4E0D\u5305\u62EC\u5728\u6570\u7EC4\u4E2D</span>
  r <span class="token operator">=</span> <span class="token function">bsearch</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>key<span class="token punctuation">,</span> a<span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">,</span> compar<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Didn&#39;t find 30\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u4E0A\u9762\u7684\u793A\u4F8B\uFF0C\u4F1A\u8F93\u51FA\u4E0B\u9762\u7684\u7ED3\u679C\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Found <span class="token number">12</span>
Didn&#39;t <span class="token function">find</span> <span class="token number">30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u591A\u5B57\u8282\u5B57\u7B26\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u591A\u5B57\u8282\u5B57\u7B26\u51FD\u6570" aria-hidden="true">#</a> \u591A\u5B57\u8282\u5B57\u7B26\u51FD\u6570</h2><p>stdlib.h \u63D0\u4F9B\u4E86\u4E0B\u9762\u7684\u51FD\u6570\uFF0C\u7528\u6765\u64CD\u4F5C\u591A\u5B57\u8282\u5B57\u7B26\uFF0C\u8BE6\u89C1\u300A\u591A\u5B57\u8282\u5B57\u7B26\u300B\u4E00\u7AE0\u3002</p><ul><li>mblen()\uFF1A\u591A\u5B57\u8282\u5B57\u7B26\u7684\u5B57\u8282\u957F\u5EA6\u3002</li><li>mbtowc()\uFF1A\u5C06\u591A\u5B57\u8282\u5B57\u7B26\u8F6C\u6362\u4E3A\u5BBD\u5B57\u7B26\u3002</li><li>wctomb()\uFF1A\u5C06\u5BBD\u5B57\u7B26\u8F6C\u6362\u4E3A\u591A\u5B57\u8282\u5B57\u7B26\u3002</li><li>mbstowcs()\uFF1A\u5C06\u591A\u5B57\u8282\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u5BBD\u5B57\u7B26\u4E32\u3002</li><li>wcstombs()\uFF1A\u5C06\u5BBD\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u591A\u5B57\u8282\u5B57\u7B26\u4E32\u3002</li></ul>`,156),o=[t];function c(i,l){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","stdlib.h.html.vue"]]);export{d as default};
