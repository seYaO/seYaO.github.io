import{_ as n,o as s,c as a,e}from"./app.3b2d76f3.js";const p={},o=e(`<h1 id="c-\u8BED\u8A00\u7684\u5185\u5B58\u7BA1\u7406" tabindex="-1"><a class="header-anchor" href="#c-\u8BED\u8A00\u7684\u5185\u5B58\u7BA1\u7406" aria-hidden="true">#</a> C \u8BED\u8A00\u7684\u5185\u5B58\u7BA1\u7406</h1><h2 id="\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#\u7B80\u4ECB" aria-hidden="true">#</a> \u7B80\u4ECB</h2><p>C \u8BED\u8A00\u7684\u5185\u5B58\u7BA1\u7406\uFF0C\u5206\u6210\u4E24\u90E8\u5206\u3002\u4E00\u90E8\u5206\u662F\u7CFB\u7EDF\u7BA1\u7406\u7684\uFF0C\u53E6\u4E00\u90E8\u5206\u662F\u7528\u6237\u624B\u52A8\u7BA1\u7406\u7684\u3002</p><p>\u7CFB\u7EDF\u7BA1\u7406\u7684\u5185\u5B58\uFF0C\u4E3B\u8981\u662F\u51FD\u6570\u5185\u90E8\u7684\u53D8\u91CF\uFF08\u5C40\u90E8\u53D8\u91CF\uFF09\u3002\u8FD9\u90E8\u5206\u53D8\u91CF\u5728\u51FD\u6570\u8FD0\u884C\u65F6\u8FDB\u5165\u5185\u5B58\uFF0C\u51FD\u6570\u8FD0\u884C\u7ED3\u675F\u540E\u81EA\u52A8\u4ECE\u5185\u5B58\u5378\u8F7D\u3002\u8FD9\u4E9B\u53D8\u91CF\u5B58\u653E\u7684\u533A\u57DF\u79F0\u4E3A\u201D\u6808\u201C\uFF08stack\uFF09\uFF0C\u201D\u6808\u201C\u6240\u5728\u7684\u5185\u5B58\u662F\u7CFB\u7EDF\u81EA\u52A8\u7BA1\u7406\u7684\u3002</p><p>\u7528\u6237\u624B\u52A8\u7BA1\u7406\u7684\u5185\u5B58\uFF0C\u4E3B\u8981\u662F\u7A0B\u5E8F\u8FD0\u884C\u7684\u6574\u4E2A\u8FC7\u7A0B\u4E2D\u90FD\u5B58\u5728\u7684\u53D8\u91CF\uFF08\u5168\u5C40\u53D8\u91CF\uFF09\uFF0C\u8FD9\u4E9B\u53D8\u91CF\u9700\u8981\u7528\u6237\u624B\u52A8\u4ECE\u5185\u5B58\u91CA\u653E\u3002\u5982\u679C\u4F7F\u7528\u540E\u5FD8\u8BB0\u91CA\u653E\uFF0C\u5B83\u5C31\u4E00\u76F4\u5360\u7528\u5185\u5B58\uFF0C\u76F4\u5230\u7A0B\u5E8F\u9000\u51FA\uFF0C\u8FD9\u79CD\u60C5\u51B5\u79F0\u4E3A\u201D\u5185\u5B58\u6CC4\u6F0F\u201C\uFF08memory leak\uFF09\u3002\u8FD9\u4E9B\u53D8\u91CF\u6240\u5728\u7684\u5185\u5B58\u79F0\u4E3A\u201D\u5806\u201C\uFF08heap\uFF09\uFF0C\u201D\u5806\u201C\u6240\u5728\u7684\u5185\u5B58\u662F\u7528\u6237\u624B\u52A8\u7BA1\u7406\u7684\u3002</p><h2 id="void-\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#void-\u6307\u9488" aria-hidden="true">#</a> void \u6307\u9488</h2><p>\u524D\u9762\u7AE0\u8282\u5DF2\u7ECF\u8BF4\u8FC7\u4E86\uFF0C\u6BCF\u4E00\u5757\u5185\u5B58\u90FD\u6709\u5730\u5740\uFF0C\u901A\u8FC7\u6307\u9488\u53D8\u91CF\u53EF\u4EE5\u83B7\u53D6\u6307\u5B9A\u5730\u5740\u7684\u5185\u5B58\u5757\u3002\u6307\u9488\u53D8\u91CF\u5FC5\u987B\u6709\u7C7B\u578B\uFF0C\u5426\u5219\u7F16\u8BD1\u5668\u65E0\u6CD5\u77E5\u9053\uFF0C\u5982\u4F55\u89E3\u8BFB\u5185\u5B58\u5757\u4FDD\u5B58\u7684\u4E8C\u8FDB\u5236\u6570\u636E\u3002\u4F46\u662F\uFF0C\u5411\u7CFB\u7EDF\u8BF7\u6C42\u5185\u5B58\u7684\u65F6\u5019\uFF0C\u6709\u65F6\u4E0D\u786E\u5B9A\u4F1A\u6709\u4EC0\u4E48\u6837\u7684\u6570\u636E\u5199\u5165\u5185\u5B58\uFF0C\u9700\u8981\u5148\u83B7\u5F97\u5185\u5B58\u5757\uFF0C\u7A0D\u540E\u518D\u786E\u5B9A\u5199\u5165\u7684\u6570\u636E\u7C7B\u578B\u3002</p><p>\u4E3A\u4E86\u6EE1\u8DB3\u8FD9\u79CD\u9700\u6C42\uFF0CC \u8BED\u8A00\u63D0\u4F9B\u4E86\u4E00\u79CD\u4E0D\u5B9A\u7C7B\u578B\u7684\u6307\u9488\uFF0C\u53EB\u505A void \u6307\u9488\u3002\u5B83\u53EA\u6709\u5185\u5B58\u5757\u7684\u5730\u5740\u4FE1\u606F\uFF0C\u6CA1\u6709\u7C7B\u578B\u4FE1\u606F\uFF0C\u7B49\u5230\u4F7F\u7528\u8BE5\u5757\u5185\u5B58\u7684\u65F6\u5019\uFF0C\u518D\u5411\u7F16\u8BD1\u5668\u8865\u5145\u8BF4\u660E\uFF0C\u91CC\u9762\u7684\u6570\u636E\u7C7B\u578B\u662F\u4EC0\u4E48\u3002</p><p>\u53E6\u4E00\u65B9\u9762\uFF0Cvoid \u6307\u9488\u7B49\u540C\u4E8E\u65E0\u7C7B\u578B\u6307\u9488\uFF0C\u53EF\u4EE5\u6307\u5411\u4EFB\u610F\u7C7B\u578B\u7684\u6570\u636E\uFF0C\u4F46\u662F\u4E0D\u80FD\u89E3\u8BFB\u6570\u636E\u3002void \u6307\u9488\u4E0E\u5176\u4ED6\u6240\u6709\u7C7B\u578B\u6307\u9488\u4E4B\u95F4\u662F\u4E92\u76F8\u8F6C\u6362\u5173\u7CFB\uFF0C\u4EFB\u4E00\u7C7B\u578B\u7684\u6307\u9488\u90FD\u53EF\u4EE5\u8F6C\u4E3A void \u6307\u9488\uFF0C\u800C void \u6307\u9488\u4E5F\u53EF\u4EE5\u8F6C\u4E3A\u4EFB\u4E00\u7C7B\u578B\u7684\u6307\u9488\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token keyword">void</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token operator">&amp;</span>x<span class="token punctuation">;</span> <span class="token comment">// \u6574\u6570\u6307\u9488\u8F6C\u4E3A void \u6307\u9488</span>
<span class="token keyword">int</span><span class="token operator">*</span> q <span class="token operator">=</span> p<span class="token punctuation">;</span> <span class="token comment">// void \u6307\u9488\u8F6C\u4E3A\u6574\u6570\u6307\u9488</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u6F14\u793A\u4E86\uFF0C\u6574\u6570\u6307\u9488\u548C void \u6307\u9488\u5982\u4F55\u4E92\u76F8\u8F6C\u6362\u3002<code>&amp;x</code>\u662F\u4E00\u4E2A\u6574\u6570\u6307\u9488\uFF0C<code>p</code>\u662F void \u6307\u9488\uFF0C\u8D4B\u503C\u65F6<code>&amp;x</code>\u7684\u5730\u5740\u4F1A\u81EA\u52A8\u89E3\u91CA\u4E3A void \u7C7B\u578B\u3002\u540C\u6837\u7684\uFF0C<code>p</code>\u518D\u8D4B\u503C\u7ED9\u6574\u6570\u6307\u9488<code>q</code>\u65F6\uFF0C<code>p</code>\u7684\u5730\u5740\u4F1A\u81EA\u52A8\u89E3\u91CA\u4E3A\u6574\u6570\u6307\u9488\u3002</p><p>\u6CE8\u610F\uFF0C\u7531\u4E8E\u4E0D\u77E5\u9053 void \u6307\u9488\u6307\u5411\u4EC0\u4E48\u7C7B\u578B\u7684\u503C\uFF0C\u6240\u4EE5\u4E0D\u80FD\u7528<code>*</code>\u8FD0\u7B97\u7B26\u53D6\u51FA\u5B83\u6307\u5411\u7684\u503C\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> a <span class="token operator">=</span> <span class="token char">&#39;X&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">void</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token operator">&amp;</span>a<span class="token punctuation">;</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>p</code>\u662F\u4E00\u4E2A void \u6307\u9488\uFF0C\u6240\u4EE5\u8FD9\u65F6\u65E0\u6CD5\u7528<code>*p</code>\u53D6\u51FA\u6307\u9488\u6307\u5411\u7684\u503C\u3002</p><p>void \u6307\u9488\u7684\u91CD\u8981\u4E4B\u5904\u5728\u4E8E\uFF0C\u5F88\u591A\u5185\u5B58\u76F8\u5173\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u5C31\u662F void \u6307\u9488\uFF0C\u53EA\u7ED9\u51FA\u5185\u5B58\u5757\u7684\u5730\u5740\u4FE1\u606F\uFF0C\u6240\u4EE5\u653E\u5728\u6700\u524D\u9762\u8FDB\u884C\u4ECB\u7ECD\u3002</p><h2 id="malloc" tabindex="-1"><a class="header-anchor" href="#malloc" aria-hidden="true">#</a> malloc()</h2><p><code>malloc()</code>\u51FD\u6570\u7528\u4E8E\u5206\u914D\u5185\u5B58\uFF0C\u8BE5\u51FD\u6570\u5411\u7CFB\u7EDF\u8981\u6C42\u4E00\u6BB5\u5185\u5B58\uFF0C\u7CFB\u7EDF\u5C31\u5728\u201C\u5806\u201D\u91CC\u9762\u5206\u914D\u4E00\u6BB5\u8FDE\u7EED\u7684\u5185\u5B58\u5757\u7ED9\u5B83\u3002\u5B83\u7684\u539F\u578B\u5B9A\u4E49\u5728\u5934\u6587\u4EF6<code>stdlib.h</code>\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> size<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5B83\u63A5\u53D7\u4E00\u4E2A\u975E\u8D1F\u6574\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8868\u793A\u6240\u8981\u5206\u914D\u7684\u5185\u5B58\u5B57\u8282\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A void \u6307\u9488\uFF0C\u6307\u5411\u5206\u914D\u597D\u7684\u5185\u5B58\u5757\u3002\u8FD9\u662F\u975E\u5E38\u5408\u7406\u7684\uFF0C\u56E0\u4E3A<code>malloc()</code>\u51FD\u6570\u4E0D\u77E5\u9053\uFF0C\u5C06\u8981\u5B58\u50A8\u5728\u8BE5\u5757\u5185\u5B58\u7684\u6570\u636E\u662F\u4EC0\u4E48\u7C7B\u578B\uFF0C\u6240\u4EE5\u53EA\u80FD\u8FD4\u56DE\u4E00\u4E2A\u65E0\u7C7B\u578B\u7684 void \u6307\u9488\u3002</p><p>\u53EF\u4EE5\u4F7F\u7528<code>malloc()</code>\u4E3A\u4EFB\u610F\u7C7B\u578B\u7684\u6570\u636E\u5206\u914D\u5185\u5B58\uFF0C\u5E38\u89C1\u7684\u505A\u6CD5\u662F\u5148\u4F7F\u7528<code>sizeof()</code>\u51FD\u6570\uFF0C\u7B97\u51FA\u67D0\u79CD\u6570\u636E\u7C7B\u578B\u6240\u9700\u7684\u5B57\u8282\u957F\u5EA6\uFF0C\u7136\u540E\u518D\u5C06\u8FD9\u4E2A\u957F\u5EA6\u4F20\u7ED9<code>malloc()</code>\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">*</span>p <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u5148\u4E3A\u6574\u6570\u7C7B\u578B\u5206\u914D\u4E00\u6BB5\u5185\u5B58\uFF0C\u7136\u540E\u5C06\u6574\u6570<code>12</code>\u653E\u5165\u8FD9\u6BB5\u5185\u5B58\u91CC\u9762\u3002\u8FD9\u4E2A\u4F8B\u5B50\u5176\u5B9E\u4E0D\u9700\u8981\u4F7F\u7528<code>malloc()</code>\uFF0C\u56E0\u4E3A C \u8BED\u8A00\u4F1A\u81EA\u52A8\u4E3A\u6574\u6570\uFF08\u672C\u4F8B\u662F<code>12</code>\uFF09\u63D0\u4F9B\u5185\u5B58\u3002</p><p>\u6709\u65F6\u5019\u4E3A\u4E86\u589E\u52A0\u4EE3\u7801\u7684\u53EF\u8BFB\u6027\uFF0C\u53EF\u4EE5\u5BF9<code>malloc()</code>\u8FD4\u56DE\u7684\u6307\u9488\u8FDB\u884C\u4E00\u6B21\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5C06<code>malloc()</code>\u8FD4\u56DE\u7684 void \u6307\u9488\uFF0C\u5F3A\u5236\u8F6C\u6362\u6210\u4E86\u6574\u6570\u6307\u9488\u3002</p><p>\u7531\u4E8E<code>sizeof()</code>\u7684\u53C2\u6570\u53EF\u4EE5\u662F\u53D8\u91CF\uFF0C\u6240\u4EE5\u4E0A\u9762\u7684\u4F8B\u5B50\u4E5F\u53EF\u4EE5\u5199\u6210\u4E0B\u9762\u8FD9\u6837\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>malloc()</code>\u5206\u914D\u5185\u5B58\u6709\u53EF\u80FD\u5206\u914D\u5931\u8D25\uFF0C\u8FD9\u65F6\u8FD4\u56DE\u5E38\u91CF NULL\u3002Null \u7684\u503C\u4E3A0\uFF0C\u662F\u4E00\u4E2A\u65E0\u6CD5\u8BFB\u5199\u7684\u5185\u5B58\u5730\u5740\uFF0C\u53EF\u4EE5\u7406\u89E3\u6210\u4E00\u4E2A\u4E0D\u6307\u5411\u4EFB\u4F55\u5730\u65B9\u7684\u6307\u9488\u3002\u5B83\u5728\u5305\u62EC<code>stdlib.h</code>\u7B49\u591A\u4E2A\u5934\u6587\u4EF6\u91CC\u9762\u90FD\u6709\u5B9A\u4E49\uFF0C\u6240\u4EE5\u53EA\u8981\u53EF\u4EE5\u4F7F\u7528<code>malloc()</code>\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528<code>NULL</code>\u3002\u7531\u4E8E\u5B58\u5728\u5206\u914D\u5931\u8D25\u7684\u53EF\u80FD\uFF0C\u6240\u4EE5\u6700\u597D\u5728\u4F7F\u7528<code>malloc()</code>\u4E4B\u540E\u68C0\u67E5\u4E00\u4E0B\uFF0C\u662F\u5426\u5206\u914D\u6210\u529F\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5185\u5B58\u5206\u914D\u5931\u8D25</span>
<span class="token punctuation">}</span>

<span class="token comment">// or</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u901A\u8FC7\u5224\u65AD\u8FD4\u56DE\u7684\u6307\u9488<code>p</code>\u662F\u5426\u4E3A<code>NULL</code>\uFF0C\u786E\u5B9A<code>malloc()</code>\u662F\u5426\u5206\u914D\u6210\u529F\u3002</p><p><code>malloc()</code>\u6700\u5E38\u7528\u7684\u573A\u5408\uFF0C\u5C31\u662F\u4E3A\u6570\u7EC4\u548C\u81EA\u5B9A\u4E49\u6570\u636E\u7ED3\u6784\u5206\u914D\u5185\u5B58\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
  p<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>p</code>\u662F\u4E00\u4E2A\u6574\u6570\u6307\u9488\uFF0C\u6307\u5411\u4E00\u6BB5\u53EF\u4EE5\u653E\u7F6E10\u4E2A\u6574\u6570\u7684\u5185\u5B58\uFF0C\u6240\u4EE5\u53EF\u4EE5\u7528\u4F5C\u6570\u7EC4\u3002</p><p><code>malloc()</code>\u7528\u6765\u521B\u5EFA\u6570\u7EC4\uFF0C\u6709\u4E00\u4E2A\u597D\u5904\uFF0C\u5C31\u662F\u5B83\u53EF\u4EE5\u521B\u5EFA\u52A8\u6001\u6570\u7EC4\uFF0C\u5373\u6839\u636E\u6210\u5458\u6570\u91CF\u7684\u4E0D\u540C\uFF0C\u800C\u521B\u5EFA\u957F\u5EA6\u4E0D\u540C\u7684\u6570\u7EC4\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">malloc</span><span class="token punctuation">(</span>n <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>malloc()</code>\u53EF\u4EE5\u6839\u636E\u53D8\u91CF<code>n</code>\u7684\u4E0D\u540C\uFF0C\u52A8\u6001\u4E3A\u6570\u7EC4\u5206\u914D\u4E0D\u540C\u7684\u5927\u5C0F\u3002</p><p>\u6CE8\u610F\uFF0C<code>malloc()</code>\u4E0D\u4F1A\u5BF9\u6240\u5206\u914D\u7684\u5185\u5B58\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u91CC\u9762\u8FD8\u4FDD\u5B58\u7740\u539F\u6765\u7684\u503C\u3002\u5982\u679C\u6CA1\u6709\u521D\u59CB\u5316\uFF0C\u5C31\u4F7F\u7528\u8FD9\u6BB5\u5185\u5B58\uFF0C\u53EF\u80FD\u4ECE\u91CC\u9762\u8BFB\u5230\u4EE5\u524D\u7684\u503C\u3002\u7A0B\u5E8F\u5458\u8981\u81EA\u5DF1\u8D1F\u8D23\u521D\u59CB\u5316\uFF0C\u6BD4\u5982\uFF0C\u5B57\u7B26\u4E32\u521D\u59CB\u5316\u53EF\u4EE5\u4F7F\u7528<code>strcpy()</code>\u51FD\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// or</span>
p <span class="token operator">=</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u5B57\u7B26\u6307\u9488<code>p</code>\u6307\u5411\u4E00\u6BB54\u4E2A\u5B57\u8282\u7684\u5185\u5B58\uFF0C<code>strcpy()</code>\u5C06\u5B57\u7B26\u4E32\u201Cabc\u201D\u62F7\u8D1D\u653E\u5165\u8FD9\u6BB5\u5185\u5B58\uFF0C\u5B8C\u6210\u4E86\u8FD9\u6BB5\u5185\u5B58\u7684\u521D\u59CB\u5316\u3002</p><h2 id="free" tabindex="-1"><a class="header-anchor" href="#free" aria-hidden="true">#</a> free()</h2><p><code>free()</code>\u7528\u4E8E\u91CA\u653E<code>malloc()</code>\u51FD\u6570\u5206\u914D\u7684\u5185\u5B58\uFF0C\u5C06\u8FD9\u5757\u5185\u5B58\u8FD8\u7ED9\u7CFB\u7EDF\u4EE5\u4FBF\u91CD\u65B0\u4F7F\u7528\uFF0C\u5426\u5219\u8FD9\u4E2A\u5185\u5B58\u5757\u4F1A\u4E00\u76F4\u5360\u7528\u5230\u7A0B\u5E8F\u8FD0\u884C\u7ED3\u675F\u3002\u8BE5\u51FD\u6570\u7684\u539F\u578B\u5B9A\u4E49\u5728\u5934\u6587\u4EF6<code>stdlib.h</code>\u91CC\u9762\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">free</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> block<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>free()</code>\u7684\u53C2\u6570\u662F<code>malloc()</code>\u8FD4\u56DE\u7684\u5185\u5B58\u5730\u5740\u3002\u4E0B\u9762\u5C31\u662F\u7528\u6CD5\u5B9E\u4F8B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">*</span>p <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
<span class="token function">free</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u5206\u914D\u7684\u5185\u5B58\u5757\u4E00\u65E6\u91CA\u653E\uFF0C\u5C31\u4E0D\u5E94\u8BE5\u518D\u6B21\u64CD\u4F5C\u5DF2\u7ECF\u91CA\u653E\u7684\u5730\u5740\uFF0C\u4E5F\u4E0D\u5E94\u8BE5\u518D\u6B21\u4F7F\u7528<code>free()</code>\u5BF9\u8BE5\u5730\u5740\u91CA\u653E\u7B2C\u4E8C\u6B21\u3002</p><p>\u4E00\u4E2A\u5F88\u5E38\u89C1\u7684\u9519\u8BEF\u662F\uFF0C\u5728\u51FD\u6570\u5185\u90E8\u5206\u914D\u4E86\u5185\u5B58\uFF0C\u4F46\u662F\u51FD\u6570\u8C03\u7528\u7ED3\u675F\u65F6\uFF0C\u6CA1\u6709\u4F7F\u7528<code>free()</code>\u91CA\u653E\u5185\u5B58\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">gobble</span><span class="token punctuation">(</span><span class="token keyword">double</span> arr<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">double</span><span class="token operator">*</span> temp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">malloc</span><span class="token punctuation">(</span>n <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u51FD\u6570<code>gobble()</code>\u5185\u90E8\u5206\u914D\u4E86\u5185\u5B58\uFF0C\u4F46\u662F\u6CA1\u6709\u5199<code>free(temp)</code>\u3002\u8FD9\u4F1A\u9020\u6210\u51FD\u6570\u8FD0\u884C\u7ED3\u675F\u540E\uFF0C\u5360\u7528\u7684\u5185\u5B58\u5757\u4F9D\u7136\u4FDD\u7559\uFF0C\u5982\u679C\u591A\u6B21\u8C03\u7528<code>gobble()</code>\uFF0C\u5C31\u4F1A\u7559\u4E0B\u591A\u4E2A\u5185\u5B58\u5757\u3002\u5E76\u4E14\uFF0C\u7531\u4E8E\u6307\u9488<code>temp</code>\u5DF2\u7ECF\u6D88\u5931\u4E86\uFF0C\u4E5F\u65E0\u6CD5\u8BBF\u95EE\u8FD9\u4E9B\u5185\u5B58\u5757\uFF0C\u518D\u6B21\u4F7F\u7528\u3002</p><h2 id="calloc" tabindex="-1"><a class="header-anchor" href="#calloc" aria-hidden="true">#</a> calloc()</h2><p><code>calloc()</code>\u51FD\u6570\u7684\u4F5C\u7528\u4E0E<code>malloc()</code>\u76F8\u4F3C\uFF0C\u4E5F\u662F\u5206\u914D\u5185\u5B58\u5757\u3002\u8BE5\u51FD\u6570\u7684\u539F\u578B\u5B9A\u4E49\u5728\u5934\u6587\u4EF6<code>stdlib.h</code>\u3002</p><p>\u4E24\u8005\u7684\u533A\u522B\u4E3B\u8981\u6709\u4E24\u70B9\uFF1A</p><p>\uFF081\uFF09<code>calloc()</code>\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u67D0\u79CD\u6570\u636E\u7C7B\u578B\u7684\u503C\u7684\u6570\u91CF\uFF0C\u7B2C\u4E8C\u4E2A\u662F\u8BE5\u6570\u636E\u7C7B\u578B\u7684\u5355\u4F4D\u5B57\u8282\u957F\u5EA6\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">calloc</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> n<span class="token punctuation">,</span> <span class="token class-name">size_t</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>calloc()</code>\u7684\u8FD4\u56DE\u503C\u4E5F\u662F\u4E00\u4E2A void \u6307\u9488\u3002\u5206\u914D\u5931\u8D25\u65F6\uFF0C\u8FD4\u56DE NULL\u3002</p><p>\uFF082\uFF09<code>calloc()</code>\u4F1A\u5C06\u6240\u5206\u914D\u7684\u5185\u5B58\u5168\u90E8\u521D\u59CB\u5316\u4E3A<code>0</code>\u3002<code>malloc()</code>\u4E0D\u4F1A\u5BF9\u5185\u5B58\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u5982\u679C\u60F3\u8981\u521D\u59CB\u5316\u4E3A<code>0</code>\uFF0C\u8FD8\u8981\u989D\u5916\u8C03\u7528<code>memset()</code>\u51FD\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token function">calloc</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">memset</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>calloc()</code>\u76F8\u5F53\u4E8E<code>malloc() + memset()</code>\u3002</p><p><code>calloc()</code>\u5206\u914D\u7684\u5185\u5B58\u5757\uFF0C\u4E5F\u8981\u4F7F\u7528<code>free()</code>\u91CA\u653E\u3002</p><h2 id="realloc" tabindex="-1"><a class="header-anchor" href="#realloc" aria-hidden="true">#</a> realloc()</h2><p><code>realloc()</code>\u51FD\u6570\u7528\u4E8E\u4FEE\u6539\u5DF2\u7ECF\u5206\u914D\u7684\u5185\u5B58\u5757\u7684\u5927\u5C0F\uFF0C\u53EF\u4EE5\u653E\u5927\u4E5F\u53EF\u4EE5\u7F29\u5C0F\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6307\u5411\u65B0\u7684\u5185\u5B58\u5757\u7684\u6307\u9488\u3002\u5982\u679C\u5206\u914D\u4E0D\u6210\u529F\uFF0C\u8FD4\u56DE NULL\u3002\u8BE5\u51FD\u6570\u7684\u539F\u578B\u5B9A\u4E49\u5728\u5934\u6587\u4EF6<code>stdlib.h</code>\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">realloc</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> block<span class="token punctuation">,</span> <span class="token class-name">size_t</span> size<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5B83\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\u3002</p><ul><li><code>block</code>\uFF1A\u5DF2\u7ECF\u5206\u914D\u597D\u7684\u5185\u5B58\u5757\u6307\u9488\uFF08\u7531<code>malloc()</code>\u6216<code>calloc()</code>\u6216<code>realloc()</code>\u4EA7\u751F\uFF09\u3002</li><li><code>size</code>\uFF1A\u8BE5\u5185\u5B58\u5757\u7684\u65B0\u5927\u5C0F\uFF0C\u5355\u4F4D\u4E3A\u5B57\u8282\u3002</li></ul><p><code>realloc()</code>\u53EF\u80FD\u8FD4\u56DE\u4E00\u4E2A\u5168\u65B0\u7684\u5730\u5740\uFF08\u6570\u636E\u4E5F\u4F1A\u81EA\u52A8\u590D\u5236\u8FC7\u53BB\uFF09\uFF0C\u4E5F\u53EF\u80FD\u8FD4\u56DE\u8DDF\u539F\u6765\u4E00\u6837\u7684\u5730\u5740\u3002<code>realloc()</code>\u4F18\u5148\u5728\u539F\u6709\u5185\u5B58\u5757\u4E0A\u8FDB\u884C\u7F29\u51CF\uFF0C\u5C3D\u91CF\u4E0D\u79FB\u52A8\u6570\u636E\uFF0C\u6240\u4EE5\u901A\u5E38\u662F\u8FD4\u56DE\u539F\u5148\u7684\u5730\u5740\u3002\u5982\u679C\u65B0\u5185\u5B58\u5757\u5C0F\u4E8E\u539F\u6765\u7684\u5927\u5C0F\uFF0C\u5219\u4E22\u5F03\u8D85\u51FA\u7684\u90E8\u5206\uFF1B\u5982\u679C\u5927\u4E8E\u539F\u6765\u7684\u5927\u5C0F\uFF0C\u5219\u4E0D\u5BF9\u65B0\u589E\u7684\u90E8\u5206\u8FDB\u884C\u521D\u59CB\u5316\uFF08\u7A0B\u5E8F\u5458\u53EF\u4EE5\u81EA\u52A8\u8C03\u7528<code>memset()</code>\uFF09\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\uFF0C<code>b</code>\u662F\u6570\u7EC4\u6307\u9488\uFF0C<code>realloc()</code>\u52A8\u6001\u8C03\u6574\u5B83\u7684\u5927\u5C0F\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span><span class="token operator">*</span> b<span class="token punctuation">;</span>

b <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
b <span class="token operator">=</span> <span class="token function">realloc</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u6307\u9488<code>b</code>\u539F\u6765\u6307\u541110\u4E2A\u6210\u5458\u7684\u6574\u6570\u6570\u7EC4\uFF0C\u4F7F\u7528<code>realloc()</code>\u8C03\u6574\u4E3A2000\u4E2A\u6210\u5458\u7684\u6570\u7EC4\u3002\u8FD9\u5C31\u662F\u624B\u52A8\u5206\u914D\u6570\u7EC4\u5185\u5B58\u7684\u597D\u5904\uFF0C\u53EF\u4EE5\u5728\u8FD0\u884C\u65F6\u968F\u65F6\u8C03\u6574\u6570\u7EC4\u7684\u957F\u5EA6\u3002</p><p><code>realloc()</code>\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u53EF\u4EE5\u662F NULL\uFF0C\u8FD9\u65F6\u5C31\u76F8\u5F53\u4E8E\u65B0\u5EFA\u4E00\u4E2A\u6307\u9488\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token function">realloc</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">3490</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">char</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">3490</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C<code>realloc()</code>\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F<code>0</code>\uFF0C\u5C31\u4F1A\u91CA\u653E\u6389\u5185\u5B58\u5757\u3002</p><p>\u7531\u4E8E\u6709\u5206\u914D\u5931\u8D25\u7684\u53EF\u80FD\uFF0C\u6240\u4EE5\u8C03\u7528<code>realloc()</code>\u4EE5\u540E\uFF0C\u6700\u597D\u68C0\u67E5\u4E00\u4E0B\u5B83\u7684\u8FD4\u56DE\u503C\u662F\u5426\u4E3A NULL\u3002\u5206\u914D\u5931\u8D25\u65F6\uFF0C\u539F\u6709\u5185\u5B58\u5757\u4E2D\u7684\u6570\u636E\u4E0D\u4F1A\u53D1\u751F\u6539\u53D8\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">float</span><span class="token operator">*</span> new_p <span class="token operator">=</span> <span class="token function">realloc</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token operator">*</span>p <span class="token operator">*</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>new_p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Error reallocing\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C<code>realloc()</code>\u4E0D\u4F1A\u5BF9\u5185\u5B58\u5757\u8FDB\u884C\u521D\u59CB\u5316\u3002</p><h2 id="restrict-\u8BF4\u660E\u7B26" tabindex="-1"><a class="header-anchor" href="#restrict-\u8BF4\u660E\u7B26" aria-hidden="true">#</a> restrict \u8BF4\u660E\u7B26</h2><p>\u58F0\u660E\u6307\u9488\u53D8\u91CF\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>restrict</code>\u8BF4\u660E\u7B26\uFF0C\u544A\u8BC9\u7F16\u8BD1\u5668\uFF0C\u8BE5\u5757\u5185\u5B58\u533A\u57DF\u53EA\u6709\u5F53\u524D\u6307\u9488\u4E00\u79CD\u8BBF\u95EE\u65B9\u5F0F\uFF0C\u5176\u4ED6\u6307\u9488\u4E0D\u80FD\u8BFB\u5199\u8BE5\u5757\u5185\u5B58\u3002\u8FD9\u79CD\u6307\u9488\u79F0\u4E3A\u201C\u53D7\u9650\u6307\u9488\u201D\uFF08restrict pointer\uFF09\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span><span class="token operator">*</span> restrict p<span class="token punctuation">;</span>
p <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u58F0\u660E\u6307\u9488\u53D8\u91CF<code>p</code>\u65F6\uFF0C\u52A0\u5165\u4E86<code>restrict</code>\u8BF4\u660E\u7B26\uFF0C\u4F7F\u5F97<code>p</code>\u53D8\u6210\u4E86\u53D7\u9650\u6307\u9488\u3002\u540E\u9762\uFF0C\u5F53<code>p</code>\u6307\u5411<code>malloc()</code>\u51FD\u6570\u8FD4\u56DE\u7684\u4E00\u5757\u5185\u5B58\u533A\u57DF\uFF0C\u5C31\u5473\u7740\uFF0C\u8BE5\u533A\u57DF\u53EA\u6709\u901A\u8FC7<code>p</code>\u6765\u8BBF\u95EE\uFF0C\u4E0D\u5B58\u5728\u5176\u4ED6\u8BBF\u95EE\u65B9\u5F0F\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span><span class="token operator">*</span> restrict p<span class="token punctuation">;</span>
p <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">int</span><span class="token operator">*</span> q <span class="token operator">=</span> p<span class="token punctuation">;</span>
<span class="token operator">*</span>q <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u672A\u5B9A\u4E49\u884C\u4E3A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u53E6\u4E00\u4E2A\u6307\u9488<code>q</code>\u4E0E\u53D7\u9650\u6307\u9488<code>p</code>\u6307\u5411\u540C\u4E00\u5757\u5185\u5B58\uFF0C\u73B0\u5728\u8BE5\u5185\u5B58\u6709<code>p</code>\u548C<code>q</code>\u4E24\u79CD\u8BBF\u95EE\u65B9\u5F0F\u3002\u8FD9\u5C31\u8FDD\u53CD\u4E86\u5BF9\u7F16\u8BD1\u5668\u7684\u627F\u8BFA\uFF0C\u540E\u9762\u901A\u8FC7<code>*q</code>\u5BF9\u8BE5\u5185\u5B58\u533A\u57DF\u8D4B\u503C\uFF0C\u4F1A\u5BFC\u81F4\u672A\u5B9A\u4E49\u884C\u4E3A\u3002</p><h2 id="memcpy" tabindex="-1"><a class="header-anchor" href="#memcpy" aria-hidden="true">#</a> memcpy()</h2><p><code>memcpy()</code>\u7528\u4E8E\u5C06\u4E00\u5757\u5185\u5B58\u62F7\u8D1D\u5230\u53E6\u4E00\u5757\u5185\u5B58\u3002\u8BE5\u51FD\u6570\u7684\u539F\u578B\u5B9A\u4E49\u5728\u5934\u6587\u4EF6<code>string.h</code>\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">memcpy</span><span class="token punctuation">(</span>
  <span class="token keyword">void</span><span class="token operator">*</span> restrict dest<span class="token punctuation">,</span> 
  <span class="token keyword">void</span><span class="token operator">*</span> restrict source<span class="token punctuation">,</span> 
  <span class="token class-name">size_t</span> n
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>dest</code>\u662F\u76EE\u6807\u5730\u5740\uFF0C<code>source</code>\u662F\u6E90\u5730\u5740\uFF0C\u7B2C\u4E09\u4E2A\u53C2\u6570<code>n</code>\u662F\u8981\u62F7\u8D1D\u7684\u5B57\u8282\u6570<code>n</code>\u3002\u5982\u679C\u8981\u62F7\u8D1D10\u4E2A double \u7C7B\u578B\u7684\u6570\u7EC4\u6210\u5458\uFF0C<code>n</code>\u5C31\u7B49\u4E8E<code>10 * sizeof(double)</code>\uFF0C\u800C\u4E0D\u662F<code>10</code>\u3002\u8BE5\u51FD\u6570\u4F1A\u5C06\u4ECE<code>source</code>\u5F00\u59CB\u7684<code>n</code>\u4E2A\u5B57\u8282\uFF0C\u62F7\u8D1D\u5230<code>dest</code>\u3002</p><p><code>dest</code>\u548C<code>source</code>\u90FD\u662F void \u6307\u9488\uFF0C\u8868\u793A\u8FD9\u91CC\u4E0D\u9650\u5236\u6307\u9488\u7C7B\u578B\uFF0C\u5404\u79CD\u7C7B\u578B\u7684\u5185\u5B58\u6570\u636E\u90FD\u53EF\u4EE5\u62F7\u8D1D\u3002\u4E24\u8005\u90FD\u6709 restrict \u5173\u952E\u5B57\uFF0C\u8868\u793A\u8FD9\u4E24\u4E2A\u5185\u5B58\u5757\u4E0D\u5E94\u8BE5\u6709\u4E92\u76F8\u91CD\u53E0\u7684\u533A\u57DF\u3002</p><p><code>memcpy()</code>\u7684\u8FD4\u56DE\u503C\u662F\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u5373\u76EE\u6807\u5730\u5740\u7684\u6307\u9488\u3002</p><p>\u56E0\u4E3A<code>memcpy()</code>\u53EA\u662F\u5C06\u4E00\u6BB5\u5185\u5B58\u7684\u503C\uFF0C\u590D\u5236\u5230\u53E6\u4E00\u6BB5\u5185\u5B58\uFF0C\u6240\u4EE5\u4E0D\u9700\u8981\u77E5\u9053\u5185\u5B58\u91CC\u9762\u7684\u6570\u636E\u662F\u4EC0\u4E48\u7C7B\u578B\u3002\u4E0B\u9762\u662F\u590D\u5236\u5B57\u7B26\u4E32\u7684\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">char</span> s<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Goats!&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">char</span> t<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token function">memcpy</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> s<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u62F7\u8D1D7\u4E2A\u5B57\u8282\uFF0C\u5305\u62EC\u7EC8\u6B62\u7B26</span>

  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\n&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;Goats!&quot;</span>

  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u5B57\u7B26\u4E32<code>s</code>\u6240\u5728\u7684\u5185\u5B58\uFF0C\u88AB\u62F7\u8D1D\u5230\u5B57\u7B26\u6570\u7EC4<code>t</code>\u6240\u5728\u7684\u5185\u5B58\u3002</p><p><code>memcpy()</code>\u53EF\u4EE5\u53D6\u4EE3<code>strcpy()</code>\u8FDB\u884C\u5B57\u7B26\u4E32\u62F7\u8D1D\uFF0C\u800C\u4E14\u662F\u66F4\u597D\u7684\u65B9\u6CD5\uFF0C\u4E0D\u4EC5\u66F4\u5B89\u5168\uFF0C\u901F\u5EA6\u4E5F\u66F4\u5FEB\uFF0C\u5B83\u4E0D\u68C0\u67E5\u5B57\u7B26\u4E32\u5C3E\u90E8\u7684<code>\\0</code>\u5B57\u7B26\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span><span class="token operator">*</span> s <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>

<span class="token class-name">size_t</span> len <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> <span class="token operator">*</span>c <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// strcpy() \u7684\u5199\u6CD5</span>
  <span class="token function">strcpy</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// memcpy() \u7684\u5199\u6CD5</span>
  <span class="token function">memcpy</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> s<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u4E24\u79CD\u5199\u6CD5\u7684\u6548\u679C\u5B8C\u5168\u4E00\u6837\uFF0C\u4F46\u662F<code>memcpy()</code>\u7684\u5199\u6CD5\u8981\u597D\u4E8E<code>strcpy()</code>\u3002</p><p>\u4F7F\u7528 void \u6307\u9488\uFF0C\u4E5F\u53EF\u4EE5\u81EA\u5B9A\u4E49\u4E00\u4E2A\u590D\u5236\u5185\u5B58\u7684\u51FD\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">my_memcpy</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> dest<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> src<span class="token punctuation">,</span> <span class="token keyword">int</span> byte_count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">char</span><span class="token operator">*</span> s <span class="token operator">=</span> src<span class="token punctuation">;</span>
  <span class="token keyword">char</span><span class="token operator">*</span> d <span class="token operator">=</span> dest<span class="token punctuation">;</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>byte_count<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">*</span>d<span class="token operator">++</span> <span class="token operator">=</span> <span class="token operator">*</span>s<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> dest<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u4E0D\u7BA1\u4F20\u5165\u7684<code>dest</code>\u548C<code>src</code>\u662F\u4EC0\u4E48\u7C7B\u578B\u7684\u6307\u9488\uFF0C\u5C06\u5B83\u4EEC\u91CD\u65B0\u5B9A\u4E49\u6210\u4E00\u5B57\u8282\u7684 Char \u6307\u9488\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u9010\u5B57\u8282\u8FDB\u884C\u590D\u5236\u3002<code>*d++ = *s++</code>\u8BED\u53E5\u76F8\u5F53\u4E8E\u5148\u6267\u884C<code>*d = *s</code>\uFF08\u6E90\u5B57\u8282\u7684\u503C\u590D\u5236\u7ED9\u76EE\u6807\u5B57\u8282\uFF09\uFF0C\u7136\u540E\u5404\u81EA\u79FB\u52A8\u5230\u4E0B\u4E00\u4E2A\u5B57\u8282\u3002\u6700\u540E\uFF0C\u8FD4\u56DE\u590D\u5236\u540E\u7684<code>dest</code>\u6307\u9488\uFF0C\u4FBF\u4E8E\u540E\u7EED\u4F7F\u7528\u3002</p><h2 id="memmove" tabindex="-1"><a class="header-anchor" href="#memmove" aria-hidden="true">#</a> memmove()</h2><p><code>memmove()</code>\u51FD\u6570\u7528\u4E8E\u5C06\u4E00\u6BB5\u5185\u5B58\u6570\u636E\u590D\u5236\u5230\u53E6\u4E00\u6BB5\u5185\u5B58\u3002\u5B83\u8DDF<code>memcpy()</code>\u7684\u4E3B\u8981\u533A\u522B\u662F\uFF0C\u5B83\u5141\u8BB8\u76EE\u6807\u533A\u57DF\u4E0E\u6E90\u533A\u57DF\u6709\u91CD\u53E0\u3002\u5982\u679C\u53D1\u751F\u91CD\u53E0\uFF0C\u6E90\u533A\u57DF\u7684\u5185\u5BB9\u4F1A\u88AB\u66F4\u6539\uFF1B\u5982\u679C\u6CA1\u6709\u91CD\u53E0\uFF0C\u5B83\u4E0E<code>memcpy()</code>\u884C\u4E3A\u76F8\u540C\u3002</p><p>\u8BE5\u51FD\u6570\u7684\u539F\u578B\u5B9A\u4E49\u5728\u5934\u6587\u4EF6<code>string.h</code>\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">memmove</span><span class="token punctuation">(</span>
  <span class="token keyword">void</span><span class="token operator">*</span> dest<span class="token punctuation">,</span> 
  <span class="token keyword">void</span><span class="token operator">*</span> source<span class="token punctuation">,</span> 
  <span class="token class-name">size_t</span> n
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>dest</code>\u662F\u76EE\u6807\u5730\u5740\uFF0C<code>source</code>\u662F\u6E90\u5730\u5740\uFF0C<code>n</code>\u662F\u8981\u79FB\u52A8\u7684\u5B57\u8282\u6570\u3002<code>dest</code>\u548C<code>source</code>\u90FD\u662F void \u6307\u9488\uFF0C\u8868\u793A\u53EF\u4EE5\u79FB\u52A8\u4EFB\u4F55\u7C7B\u578B\u7684\u5185\u5B58\u6570\u636E\uFF0C\u4E24\u4E2A\u5185\u5B58\u533A\u57DF\u53EF\u4EE5\u6709\u91CD\u53E0\u3002</p><p><code>memmove()</code>\u8FD4\u56DE\u503C\u662F\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u5373\u76EE\u6807\u5730\u5740\u7684\u6307\u9488\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>

<span class="token function">memmove</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">99</span> <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u4ECE\u6570\u7EC4\u6210\u5458<code>a[1]</code>\u5F00\u59CB\u768499\u4E2A\u6210\u5458\uFF0C\u90FD\u5411\u524D\u79FB\u52A8\u4E00\u4E2A\u4F4D\u7F6E\u3002</p><p>\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> x<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Home Sweet Home&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// \u8F93\u51FA Sweet Home Home</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\n&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">memmove</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token operator">&amp;</span>x<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u4ECE\u5B57\u7B26\u4E32<code>x</code>\u76845\u53F7\u4F4D\u7F6E\u5F00\u59CB\u768410\u4E2A\u5B57\u8282\uFF0C\u5C31\u662F\u201CSweet Home\u201D\uFF0C<code>memmove()</code>\u5C06\u5176\u524D\u79FB\u52300\u53F7\u4F4D\u7F6E\uFF0C\u6240\u4EE5<code>x</code>\u5C31\u53D8\u6210\u4E86\u201CSweet Home Home\u201D\u3002</p><h2 id="memcmp" tabindex="-1"><a class="header-anchor" href="#memcmp" aria-hidden="true">#</a> memcmp()</h2><p><code>memcmp()</code>\u51FD\u6570\u7528\u6765\u6BD4\u8F83\u4E24\u4E2A\u5185\u5B58\u533A\u57DF\u3002\u5B83\u7684\u539F\u578B\u5B9A\u4E49\u5728<code>string.h</code>\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">memcmp</span><span class="token punctuation">(</span>
  <span class="token keyword">const</span> <span class="token keyword">void</span><span class="token operator">*</span> s1<span class="token punctuation">,</span>
  <span class="token keyword">const</span> <span class="token keyword">void</span><span class="token operator">*</span> s2<span class="token punctuation">,</span>
  <span class="token class-name">size_t</span> n
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u63A5\u53D7\u4E09\u4E2A\u53C2\u6570\uFF0C\u524D\u4E24\u4E2A\u53C2\u6570\u662F\u7528\u6765\u6BD4\u8F83\u7684\u6307\u9488\uFF0C\u7B2C\u4E09\u4E2A\u53C2\u6570\u6307\u5B9A\u6BD4\u8F83\u7684\u5B57\u8282\u6570\u3002</p><p>\u5B83\u7684\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A\u6574\u6570\u3002\u4E24\u5757\u5185\u5B58\u533A\u57DF\u7684\u6BCF\u4E2A\u5B57\u8282\u4EE5\u5B57\u7B26\u5F62\u5F0F\u89E3\u8BFB\uFF0C\u6309\u7167\u5B57\u5178\u987A\u5E8F\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5982\u679C\u4E24\u8005\u76F8\u540C\uFF0C\u8FD4\u56DE<code>0</code>\uFF1B\u5982\u679C<code>s1</code>\u5927\u4E8E<code>s2</code>\uFF0C\u8FD4\u56DE\u5927\u4E8E0\u7684\u6574\u6570\uFF1B\u5982\u679C<code>s1</code>\u5C0F\u4E8E<code>s2</code>\uFF0C\u8FD4\u56DE\u5C0F\u4E8E0\u7684\u6574\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span><span class="token operator">*</span> s1 <span class="token operator">=</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">char</span><span class="token operator">*</span> s2 <span class="token operator">=</span> <span class="token string">&quot;acd&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token function">memcmp</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C0F\u4E8E 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u6BD4\u8F83<code>s1</code>\u548C<code>s2</code>\u7684\u524D\u4E09\u4E2A\u5B57\u8282\uFF0C\u7531\u4E8E<code>s1</code>\u5C0F\u4E8E<code>s2</code>\uFF0C\u6240\u4EE5<code>r</code>\u662F\u4E00\u4E2A\u5C0F\u4E8E0\u7684\u6574\u6570\uFF0C\u4E00\u822C\u4E3A-1\u3002</p><p>\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> s1<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;i&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;g&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;\\0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;r&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> s2<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;i&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;g&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;\\0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;t&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">memcmp</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">memcmp</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">memcmp</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u5C55\u793A\u4E86\uFF0C<code>memcmp()</code>\u53EF\u4EE5\u6BD4\u8F83\u5185\u90E8\u5E26\u6709\u5B57\u7B26\u4E32\u7EC8\u6B62\u7B26<code>\\0</code>\u7684\u5185\u5B58\u533A\u57DF\u3002</p>`,115),c=[o];function t(l,i){return s(),a("div",null,c)}const u=n(p,[["render",t],["__file","memory.html.vue"]]);export{u as default};
