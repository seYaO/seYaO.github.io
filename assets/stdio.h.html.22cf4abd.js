import{_ as n,o as s,c as a,e}from"./app.3b2d76f3.js";const p={},t=e(`<h1 id="stdio-h" tabindex="-1"><a class="header-anchor" href="#stdio-h" aria-hidden="true">#</a> stdio.h</h1><p><code>stdio.h</code>\u662F C \u8BED\u8A00\u7684\u6807\u51C6 I/O \u5E93\uFF0C\u7528\u4E8E\u8BFB\u53D6\u548C\u5199\u5165\u6587\u4EF6\uFF0C\u4E5F\u7528\u4E8E\u63A7\u5236\u53F0\u7684\u8F93\u5165\u548C\u8F93\u51FA\u3002</p><h2 id="\u6807\u51C6-i-o-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6807\u51C6-i-o-\u51FD\u6570" aria-hidden="true">#</a> \u6807\u51C6 I/O \u51FD\u6570</h2><p>\u4EE5\u4E0B\u51FD\u6570\u7528\u4E8E\u63A7\u5236\u53F0\u7684\u8F93\u5165\u548C\u8F93\u51FA\u3002</p><ul><li>printf()\uFF1A\u8F93\u51FA\u5230\u63A7\u5236\u53F0\uFF0C\u8BE6\u89C1\u300A\u57FA\u672C\u8BED\u6CD5\u300B\u4E00\u7AE0\u3002</li><li>scanf()\uFF1A\u4ECE\u63A7\u5236\u53F0\u8BFB\u53D6\u8F93\u5165\uFF0C\u8BE6\u89C1\u300AI/O \u51FD\u6570\u300B\u4E00\u7AE0\u3002</li><li>getchar()\uFF1A\u4ECE\u63A7\u5236\u53F0\u8BFB\u53D6\u4E00\u4E2A\u5B57\u7B26\uFF0C\u8BE6\u89C1\u300AI/O \u51FD\u6570\u300B\u4E00\u7AE0\u3002</li><li>putchar()\uFF1A\u5411\u63A7\u5236\u53F0\u5199\u5165\u4E00\u4E2A\u5B57\u7B26\uFF0C\u8BE6\u89C1\u300AI/O \u51FD\u6570\u300B\u4E00\u7AE0\u3002</li><li>gets()\uFF1A\u4ECE\u63A7\u5236\u53F0\u8BFB\u53D6\u6574\u884C\u8F93\u5165\uFF08\u5DF2\u5E9F\u9664\uFF09\uFF0C\u8BE6\u89C1\u300AI/O \u51FD\u6570\u300B\u4E00\u7AE0\u3002</li><li>puts()\uFF1A\u5411\u63A7\u5236\u53F0\u5199\u5165\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u8BE6\u89C1\u300AI/O \u51FD\u6570\u300B\u4E00\u7AE0\u3002</li></ul><h2 id="\u6587\u4EF6\u64CD\u4F5C\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u64CD\u4F5C\u51FD\u6570" aria-hidden="true">#</a> \u6587\u4EF6\u64CD\u4F5C\u51FD\u6570</h2><p>\u4EE5\u4E0B\u51FD\u6570\u7528\u4E8E\u6587\u4EF6\u64CD\u4F5C\uFF0C\u8BE6\u89C1\u300A\u6587\u4EF6\u64CD\u4F5C\u300B\u4E00\u7AE0\u3002</p><ul><li>fopen()\uFF1A\u6253\u5F00\u6587\u4EF6\u3002</li><li>fclose()\uFF1A\u5173\u95ED\u6587\u4EF6\u3002</li><li>freopen()\uFF1A\u6253\u5F00\u4E00\u4E2A\u65B0\u6587\u4EF6\uFF0C\u5173\u8054\u4E00\u4E2A\u5DF2\u7ECF\u6253\u5F00\u7684\u6587\u4EF6\u6307\u9488\u3002</li><li>fprintf()\uFF1A\u8F93\u51FA\u5230\u6587\u4EF6\u3002</li><li>fscanf()\uFF1A\u4ECE\u6587\u4EF6\u8BFB\u53D6\u6570\u636E\u3002</li><li>getc()\uFF1A\u4ECE\u6587\u4EF6\u8BFB\u53D6\u4E00\u4E2A\u5B57\u7B26\u3002</li><li>fgetc()\uFF1A\u4ECE\u6587\u4EF6\u8BFB\u53D6\u4E00\u4E2A\u5B57\u7B26\u3002</li><li>putc()\uFF1A\u5411\u6587\u4EF6\u5199\u5165\u4E00\u4E2A\u5B57\u7B26\u3002</li><li>fputc()\uFF1A\u5411\u6587\u4EF6\u5199\u5165\u4E00\u4E2A\u5B57\u7B26\u3002</li><li>fgets()\uFF1A\u4ECE\u6587\u4EF6\u8BFB\u53D6\u6574\u884C\u3002</li><li>fputs()\uFF1A\u5411\u6587\u4EF6\u5199\u5165\u5B57\u7B26\u4E32\u3002</li><li>fread()\uFF1A\u4ECE\u6587\u4EF6\u8BFB\u53D6\u4E8C\u8FDB\u5236\u6570\u636E\u3002</li><li>fwrite()\uFF1A\u5411\u6587\u4EF6\u5199\u5165\u4E8C\u8FDB\u5236\u6570\u636E\u3002</li><li>fseek()\uFF1A\u5C06\u6587\u4EF6\u5185\u90E8\u6307\u9488\u79FB\u5230\u6307\u5B9A\u4F4D\u7F6E\u3002</li><li>ftell()\uFF1A\u83B7\u53D6\u6587\u4EF6\u5185\u90E8\u6307\u9488\u7684\u5F53\u524D\u4F4D\u7F6E\u3002</li><li>rewind()\uFF1A\u5C06\u6587\u4EF6\u5185\u90E8\u6307\u9488\u91CD\u7F6E\u5230\u6587\u4EF6\u5F00\u59CB\u5904\u3002</li><li>fgetpos()\uFF1A\u83B7\u53D6\u6587\u4EF6\u5185\u90E8\u6307\u9488\u7684\u5F53\u524D\u4F4D\u7F6E\u3002</li><li>fsetpos()\uFF1A\u8BBE\u7F6E\u6587\u4EF6\u5185\u90E8\u6307\u9488\u7684\u5F53\u524D\u4F4D\u7F6E\u3002</li><li>feof()\uFF1A\u5224\u65AD\u6587\u4EF6\u5185\u90E8\u6307\u9488\u662F\u5426\u6307\u5411\u6587\u4EF6\u7ED3\u5C3E\u3002</li><li>ferror()\uFF1A\u8FD4\u56DE\u6587\u4EF6\u9519\u8BEF\u6307\u793A\u5668\u7684\u72B6\u6001\u3002</li><li>clearerr()\uFF1A\u91CD\u7F6E\u6587\u4EF6\u9519\u8BEF\u6307\u793A\u5668\u3002</li><li>remove()\uFF1A\u5220\u9664\u6587\u4EF6\u3002</li><li>rename()\uFF1A\u6587\u4EF6\u6539\u540D\uFF0C\u4EE5\u53CA\u79FB\u52A8\u6587\u4EF6\u3002</li></ul><h2 id="\u5B57\u7B26\u4E32\u64CD\u4F5C\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u64CD\u4F5C\u51FD\u6570" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u64CD\u4F5C\u51FD\u6570</h2><p>\u4EE5\u4E0B\u51FD\u6570\u7528\u4E8E\u64CD\u4F5C\u5B57\u7B26\u4E32\uFF0C\u8BE6\u89C1\u300A\u5B57\u7B26\u4E32\u64CD\u4F5C\u300B\u4E00\u7AE0\u3002</p><ul><li>sscanf()\uFF1A\u4ECE\u5B57\u7B26\u4E32\u8BFB\u53D6\u6570\u636E\uFF0C\u8BE6\u89C1\u300AI/O \u51FD\u6570\u300B\u4E00\u7AE0\u3002</li><li>sprintf()\uFF1A\u8F93\u51FA\u5230\u5B57\u7B26\u4E32\u3002</li><li>snprintf()\uFF1A\u8F93\u51FA\u5230\u5B57\u7B26\u4E32\u7684\u66F4\u5B89\u5168\u7248\u672C\uFF0C\u6307\u5B9A\u4E86\u8F93\u51FA\u5B57\u7B26\u4E32\u7684\u6570\u91CF\u3002</li></ul><h2 id="tmpfile" tabindex="-1"><a class="header-anchor" href="#tmpfile" aria-hidden="true">#</a> tmpfile()</h2><p><code>tmpfile()</code>\u51FD\u6570\u521B\u5EFA\u4E00\u4E2A\u4E34\u65F6\u6587\u4EF6\uFF0C\u8BE5\u6587\u4EF6\u53EA\u5728\u7A0B\u5E8F\u8FD0\u884C\u671F\u95F4\u5B58\u5728\uFF0C\u9664\u975E\u624B\u52A8\u5173\u95ED\u5B83\u3002\u5B83\u7684\u539F\u578B\u5982\u4E0B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>FILE<span class="token operator">*</span> <span class="token function">tmpfile</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>tmpfile()</code>\u8FD4\u56DE\u4E00\u4E2A\u6587\u4EF6\u6307\u9488\uFF0C\u53EF\u4EE5\u7528\u4E8E\u8BBF\u95EE\u8BE5\u51FD\u6570\u521B\u5EFA\u7684\u4E34\u65F6\u6587\u4EF6\u3002\u5982\u679C\u521B\u5EFA\u5931\u8D25\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u7A7A\u6307\u9488 NULL\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>FILE<span class="token operator">*</span> tempptr<span class="token punctuation">;</span>
tempptr <span class="token operator">=</span> <span class="token function">tmpfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528<code>close()</code>\u65B9\u6CD5\u5173\u95ED\u4E34\u65F6\u6587\u4EF6\u540E\uFF0C\u8BE5\u6587\u4EF6\u5C06\u88AB\u81EA\u52A8\u5220\u9664\u3002</p><p><code>tmpfile()</code>\u6709\u4E24\u4E2A\u7F3A\u70B9\u3002\u4E00\u662F\u65E0\u6CD5\u77E5\u9053\u4E34\u65F6\u6587\u4EF6\u7684\u6587\u4EF6\u540D\uFF0C\u4E8C\u662F\u65E0\u6CD5\u8BA9\u8BE5\u6587\u4EF6\u6210\u4E3A\u6C38\u4E45\u6587\u4EF6\u3002</p><h2 id="tmpnam" tabindex="-1"><a class="header-anchor" href="#tmpnam" aria-hidden="true">#</a> tmpnam()</h2><p><code>tmpname()</code>\u51FD\u6570\u4E3A\u4E34\u65F6\u6587\u4EF6\u751F\u6210\u4E00\u4E2A\u540D\u5B57\uFF0C\u786E\u4FDD\u4E0D\u4F1A\u4E0E\u5176\u4ED6\u6587\u4EF6\u91CD\u540D\u3002\u5B83\u7684\u539F\u578B\u5982\u4E0B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span><span class="token operator">*</span> <span class="token function">tmpname</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5B83\u7684\u53C2\u6570\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\u53D8\u91CF\uFF0C<code>tmpnam()</code>\u4F1A\u628A\u4E34\u65F6\u6587\u4EF6\u7684\u6587\u4EF6\u540D\u590D\u5236\u5230\u8FD9\u4E2A\u53D8\u91CF\u91CC\u9762\uFF0C\u5E76\u8FD4\u56DE\u6307\u5411\u8BE5\u5B57\u7B26\u4E32\u53D8\u91CF\u7684\u6307\u9488\u3002\u5982\u679C\u751F\u6210\u6587\u4EF6\u540D\u5931\u8D25\uFF0C<code>tmpnam()</code>\u8FD4\u56DE\u7A7A\u6307\u9488 NULL\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> filename<span class="token punctuation">[</span>L_tmpnam<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tmpnam</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
  <span class="token comment">// \u8F93\u51FA\u8BF8\u5982 /tmp/filew9PMuZ \u7684\u6587\u4EF6\u540D</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\n&quot;</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">else</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Something wrong!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>L_tmpnam</code>\u662F<code>stdio.h</code>\u5B9A\u4E49\u7684\u4E00\u4E2A\u5B8F\uFF0C\u6307\u5B9A\u4E86\u4E34\u65F6\u6587\u4EF6\u7684\u6587\u4EF6\u540D\u957F\u5EA6\u3002</p><p><code>tmpname()</code>\u7684\u53C2\u6570\u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A\u7A7A\u6307\u9488 NULL\uFF0C\u540C\u6837\u8FD4\u56DE\u6307\u5411\u6587\u4EF6\u540D\u5B57\u7B26\u4E32\u7684\u6307\u9488\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span><span class="token operator">*</span> filename<span class="token punctuation">;</span>
filename <span class="token operator">=</span> <span class="token function">tmpnam</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u53D8\u91CF<code>filename</code>\u5C31\u662F<code>tmpnam()</code>\u751F\u6210\u7684\u6587\u4EF6\u540D\u3002</p><p>\u8BE5\u51FD\u6570\u53EA\u662F\u751F\u6210\u4E00\u4E2A\u6587\u4EF6\u540D\uFF0C\u7A0D\u540E\u53EF\u4EE5\u4F7F\u7528<code>fopen()</code>\u6253\u5F00\u8BE5\u6587\u4EF6\u5E76\u4F7F\u7528\u5B83\u3002</p><h2 id="fflush" tabindex="-1"><a class="header-anchor" href="#fflush" aria-hidden="true">#</a> fflush()</h2><p><code>fflush()</code>\u7528\u4E8E\u6E05\u7A7A\u7F13\u5B58\u533A\u3002\u5B83\u63A5\u53D7\u4E00\u4E2A\u6587\u4EF6\u6307\u9488\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5C06\u7F13\u5B58\u533A\u5185\u5BB9\u5199\u5165\u8BE5\u6587\u4EF6\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">fflush</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C\u4E0D\u9700\u8981\u4FDD\u5B58\u7F13\u5B58\u533A\u5185\u5BB9\uFF0C\u5219\u53EF\u4EE5\u4F20\u5165\u7A7A\u6307\u9488 NULL\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">fflush</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C\u6E05\u7A7A\u6210\u529F\uFF0C<code>fflush()</code>\u8FD4\u56DE0\uFF0C\u5426\u5219\u8FD4\u56DE EOF\u3002</p><p>\u6CE8\u610F\uFF0C<code>fflush()</code>\u4E00\u822C\u53EA\u7528\u6765\u6E05\u7A7A\u8F93\u51FA\u7F13\u5B58\u533A\uFF08\u6BD4\u5982\u5199\u6587\u4EF6\uFF09\u3002\u5982\u679C\u4F7F\u7528\u5B83\u6765\u6E05\u7A7A\u8F93\u5165\u7F13\u5B58\u533A\uFF08\u6BD4\u5982\u8BFB\u6587\u4EF6\uFF09\uFF0C\u5C5E\u4E8E\u672A\u5B9A\u4E49\u884C\u4E3A\u3002</p><p><code>fflush()</code>\u7684\u4E00\u4E2A\u7528\u9014\u662F\u4E0D\u7B49\u56DE\u8F66\u952E\uFF0C\u5C31\u5F3A\u8FEB\u8F93\u51FA\u7F13\u5B58\u533A\u3002\u5927\u591A\u6570\u7CFB\u7EDF\u90FD\u662F\u884C\u7F13\u5B58\uFF0C\u8FD9\u610F\u5473\u7740\u53EA\u6709\u9047\u5230\u56DE\u8F66\u952E\uFF08\u6216\u8005\u7F13\u5B58\u533A\u6EE1\u4E86\uFF0C\u6216\u8005\u6587\u4EF6\u8BFB\u5230\u7ED3\u5C3E\uFF09\uFF0C\u7F13\u5B58\u533A\u7684\u5185\u5BB9\u624D\u4F1A\u8F93\u51FA\uFF0C<code>fflush()</code>\u53EF\u4EE5\u4E0D\u7B49\u56DE\u8F66\u952E\uFF0C\u7ACB\u5373\u8F93\u51FA\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\r%d&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">fflush</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u662F\u4E00\u4E2A\u5012\u8BA1\u65F6\u6548\u679C\uFF0C<code>\\r</code>\u662F\u56DE\u8F66\u952E\uFF0C\u8868\u793A\u6BCF\u8F6E\u5FAA\u73AF\u90FD\u4F1A\u56DE\u5230\u5F53\u524D\u884C\u7684\u884C\u9996\uFF0C\u7B49\u4E8E\u5220\u9664\u4E0A\u4E00\u8F6E\u5FAA\u73AF\u7684\u8F93\u51FA\u3002<code>fflush(stdout)</code>\u8868\u793A\u7ACB\u5373\u5C06\u7F13\u5B58\u8F93\u51FA\u5230\u663E\u793A\u5668\uFF0C\u8FD9\u4E00\u884C\u662F\u5FC5\u9700\u7684\uFF0C\u5426\u5219\u7531\u4E8E\u4E0A\u4E00\u884C\u7684\u8F93\u51FA\u6CA1\u6709\u56DE\u8F66\u952E\uFF0C\u4E0D\u4F1A\u89E6\u53D1\u7F13\u5B58\u8F93\u51FA\uFF0C\u5C4F\u5E55\u4E0A\u4E0D\u4F1A\u663E\u793A\u4EFB\u4F55\u5185\u5BB9\uFF0C\u53EA\u4F1A\u7B49\u5230\u7A0B\u5E8F\u8FD0\u884C\u7ED3\u675F\u518D\u4E00\u6B21\u6027\u8F93\u51FA\u3002</p><h2 id="setvbuf" tabindex="-1"><a class="header-anchor" href="#setvbuf" aria-hidden="true">#</a> setvbuf()</h2><p><code>setvbuf()</code>\u51FD\u6570\u7528\u4E8E\u5B9A\u4E49\u67D0\u4E2A\u5B57\u8282\u6D41\u5E94\u8BE5\u5982\u4F55\u7F13\u5B58\u3002\u5B83\u53EF\u4EE5\u63A5\u53D7\u56DB\u4E2A\u53C2\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">setvbuf</span><span class="token punctuation">(</span>FILE<span class="token operator">*</span> stream<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> buffer<span class="token punctuation">,</span> <span class="token keyword">int</span> mode<span class="token punctuation">,</span> <span class="token class-name">size_t</span> size<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7B2C\u4E00\u4E2A\u53C2\u6570<code>stream</code>\u662F\u6587\u4EF6\u6D41\u3002</p><p>\u7B2C\u4E8C\u4E2A\u53C2\u6570<code>buffer</code>\u662F\u7F13\u5B58\u533A\u7684\u5730\u5740\u3002</p><p>\u7B2C\u4E09\u4E2A\u53C2\u6570<code>mode</code>\u6307\u5B9A\u7F13\u5B58\u7684\u884C\u4E3A\u6A21\u5F0F\uFF0C\u5B83\u662F\u4E0B\u9762\u4E09\u4E2A\u5B8F\u4E4B\u4E00\uFF0C\u8FD9\u4E9B\u5B8F\u90FD\u5B9A\u4E49\u5728<code>stdio.h</code>\u3002</p><ul><li><code>_IOFBF</code>\uFF1A\u6EE1\u7F13\u5B58\u3002\u5F53\u7F13\u5B58\u4E3A\u7A7A\u65F6\uFF0C\u624D\u4ECE\u6D41\u8BFB\u5165\u6570\u636E\uFF1B\u5F53\u7F13\u5B58\u6EE1\u4E86\uFF0C\u624D\u5411\u6D41\u5199\u5165\u6570\u636E\u3002\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u8FD9\u662F\u9ED8\u8BA4\u8BBE\u7F6E\u3002</li><li><code>_IOLBF</code>\uFF1A\u884C\u7F13\u5B58\u3002\u6BCF\u6B21\u4ECE\u6D41\u8BFB\u5165\u4E00\u884C\u6570\u636E\uFF0C\u6216\u5411\u6D41\u5199\u5165\u4E00\u884C\u6570\u636E\uFF0C\u5373\u4EE5\u884C\u4E3A\u5355\u4F4D\u8BFB\u5199\u7F13\u5B58\u3002</li><li><code>_IONBF</code>\uFF1A\u65E0\u7F13\u5B58\u3002\u4E0D\u4F7F\u7528\u7F13\u5B58\u533A\uFF0C\u76F4\u63A5\u8BFB\u5199\u8BBE\u5907\u3002</li></ul><p>\u7B2C\u56DB\u4E2A\u53C2\u6570<code>size</code>\u6307\u5B9A\u7F13\u5B58\u533A\u7684\u5927\u5C0F\u3002\u8F83\u5927\u7684\u7F13\u5B58\u533A\u63D0\u4F9B\u66F4\u597D\u7684\u6027\u80FD\uFF0C\u800C\u8F83\u5C0F\u7684\u7F13\u5B58\u533A\u53EF\u4EE5\u8282\u7701\u7A7A\u95F4\u3002<code>stdio.h</code>\u63D0\u4F9B\u4E86\u4E00\u4E2A\u5B8F<code>BUFSIZ</code>\uFF0C\u8868\u793A\u7CFB\u7EDF\u9ED8\u8BA4\u7684\u7F13\u5B58\u533A\u5927\u5C0F\u3002</p><p>\u5B83\u7684\u610F\u4E49\u5728\u4E8E\uFF0C\u4F7F\u5F97\u7528\u6237\u53EF\u4EE5\u5728\u6253\u5F00\u4E00\u4E2A\u6587\u4EF6\u4E4B\u524D\uFF0C\u5B9A\u4E49\u81EA\u5DF1\u7684\u6587\u4EF6\u7F13\u51B2\u533A\uFF0C\u800C\u4E0D\u5FC5\u4F7F\u7528<code>fopen()</code>\u51FD\u6570\u6253\u5F00\u6587\u4EF6\u65F6\u8BBE\u5B9A\u7684\u9ED8\u8BA4\u7F13\u51B2\u533A\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> buffer<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token function">setvbuf</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span> buffer<span class="token punctuation">,</span> _IOFBF<span class="token punctuation">,</span> N<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u8BBE\u7F6E\u6587\u4EF6\u6D41<code>stream</code>\u7684\u7F13\u5B58\u533A\u4ECE\u5730\u5740<code>buffer</code>\u5F00\u59CB\uFF0C\u5927\u5C0F\u4E3A<code>N</code>\uFF0C\u6A21\u5F0F\u4E3A<code>_IOFBF</code>\u3002</p><p><code>setvbuf()</code>\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u53EF\u4EE5\u4E3A\u7A7A\u6307\u9488 NULL\u3002\u8FD9\u6837\u7684\u8BDD\uFF0C<code>setvbuf()</code>\u4F1A\u81EA\u5DF1\u521B\u5EFA\u4E00\u4E2A\u7F13\u5B58\u533A\u3002</p><p>\u6CE8\u610F\uFF0C<code>setvbuf()</code>\u7684\u8C03\u7528\u5FC5\u987B\u5728\u5BF9\u6587\u4EF6\u6D41\u6267\u884C\u4EFB\u4F55\u64CD\u4F5C\u4E4B\u524D\u3002</p><p>\u5982\u679C\u8C03\u7528\u6210\u529F\uFF0C<code>setvbuf()</code>\u7684\u8FD4\u56DE\u503C\u4E3A<code>0</code>\uFF0C\u5426\u5219\u8FD4\u56DE\u975E\u96F6\u503C\u3002</p><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u662F\u5C06\u7F13\u5B58\u533A\u8C03\u6574\u4E3A\u884C\u7F13\u5B58\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>FILE <span class="token operator">*</span>fp<span class="token punctuation">;</span>
<span class="token keyword">char</span> lineBuf<span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

fp <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">&quot;somefile.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setvbuf</span><span class="token punctuation">(</span>fp<span class="token punctuation">,</span> lineBuf<span class="token punctuation">,</span> _IOLBF<span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="setbuf" tabindex="-1"><a class="header-anchor" href="#setbuf" aria-hidden="true">#</a> setbuf()</h2><p><code>setbuf()</code>\u662F<code>setvbuf()</code>\u7684\u65E9\u671F\u7248\u672C\uFF0C\u53EF\u4EE5\u89C6\u4E3A\u540E\u8005\u7684\u7B80\u5316\u7248\u672C\uFF0C\u4E5F\u7528\u6765\u5B9A\u4E49\u67D0\u4E2A\u5B57\u8282\u6D41\u7684\u7F13\u5B58\u533A\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">setbuf</span><span class="token punctuation">(</span>FILE<span class="token operator">*</span> stream<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5B83\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570<code>stream</code>\u662F\u6587\u4EF6\u6D41\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570<code>buffer</code>\u662F\u7F13\u5B58\u533A\u7684\u5730\u5740\u3002</p><p>\u5B83\u603B\u662F\u53EF\u4EE5\u6539\u5199\u6210<code>setvbuf()</code>\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> buffer<span class="token punctuation">[</span>BUFSIZ<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token function">setbuf</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span> buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token function">setvbuf</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span> buffer<span class="token punctuation">,</span> _IOFBF<span class="token punctuation">,</span> BUFSIZ<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>BUFSIZ</code>\u662F<code>stdio.h</code>\u5B9A\u4E49\u7684\u5B8F\uFF0C\u8868\u793A\u7CFB\u7EDF\u9ED8\u8BA4\u7684\u7F13\u5B58\u533A\u5927\u5C0F\u3002</p><p><code>setbuf()</code>\u51FD\u6570\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</p><p><code>setbuf()</code>\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u5982\u679C\u8BBE\u7F6E\u4E3A NULL\uFF0C\u8868\u793A\u4E0D\u8FDB\u884C\u7F13\u5B58\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">setbuf</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token function">setvbuf</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> _IONBF<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ungetc" tabindex="-1"><a class="header-anchor" href="#ungetc" aria-hidden="true">#</a> ungetc()</h2><p><code>ungetc()</code>\u5C06\u4ECE\u7F13\u5B58\u91CC\u9762\u8BFB\u53D6\u7684\u4E0A\u4E00\u4E2A\u5B57\u7B26\uFF0C\u91CD\u65B0\u653E\u56DE\u7F13\u5B58\uFF0C\u4E0B\u4E00\u4E2A\u8BFB\u53D6\u7F13\u5B58\u7684\u64CD\u4F5C\u4F1A\u4ECE\u8FD9\u4E2A\u5B57\u7B26\u5F00\u59CB\u3002\u6709\u4E9B\u64CD\u4F5C\u9700\u8981\u4E86\u89E3\u4E0B\u4E00\u4E2A\u5B57\u7B26\u662F\u4EC0\u4E48\uFF0C\u518D\u51B3\u5B9A\u5E94\u8BE5\u600E\u4E48\u5904\u7406\uFF0C\u8FD9\u65F6\u8FD9\u4E2A\u51FD\u6570\u5C31\u5F88\u6709\u7528\u3002</p><p>\u5B83\u7684\u539F\u578B\u5982\u4E0B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">ungetc</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">,</span> FILE <span class="token operator">*</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5B83\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u5B57\u7B26\u53D8\u91CF\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u6253\u5F00\u7684\u6587\u4EF6\u6D41\u3002\u5B83\u7684\u8FD4\u56DE\u503C\u662F\u653E\u56DE\u7F13\u5B58\u7684\u90A3\u4E2A\u5B57\u7B26\uFF0C\u64CD\u4F5C\u5931\u8D25\u65F6\uFF0C\u8FD4\u56DE EOF\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> ch <span class="token operator">=</span> <span class="token function">fgetc</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isdigit</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ch <span class="token operator">=</span> <span class="token function">fgetc</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">ungetc</span><span class="token punctuation">(</span>ch<span class="token punctuation">,</span> fp<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u5982\u679C\u8BFB\u53D6\u7684\u5B57\u7B26\u4E0D\u662F\u6570\u5B57\uFF0C\u5C31\u5C06\u5176\u653E\u56DE\u7F13\u5B58\u3002</p><h2 id="perror" tabindex="-1"><a class="header-anchor" href="#perror" aria-hidden="true">#</a> perror()</h2><p><code>perror()</code>\u7528\u4E8E\u5728 stderr \u7684\u9519\u8BEF\u4FE1\u606F\u4E4B\u524D\uFF0C\u6DFB\u52A0\u4E00\u4E2A\u81EA\u5B9A\u4E49\u5B57\u7B26\u4E32\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">perror</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8BE5\u51FD\u6570\u7684\u53C2\u6570\u5C31\u662F\u5728\u62A5\u9519\u4FE1\u606F\u524D\u6DFB\u52A0\u7684\u5B57\u7B26\u4E32\u3002\u5B83\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;errno.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

  errno <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">float</span> y <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>errno <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;sqrt error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u6C42<code>-1</code>\u7684\u5E73\u65B9\u6839\uFF0C\u5BFC\u81F4\u62A5\u9519\u3002\u5934\u6587\u4EF6<code>errno.h</code>\u63D0\u4F9B\u5B8F<code>errno</code>\uFF0C\u53EA\u8981\u4E0A\u4E00\u6B65\u64CD\u4F5C\u51FA\u9519\uFF0C\u8FD9\u4E2A\u5B8F\u5C31\u4F1A\u8BBE\u7F6E\u6210\u975E\u96F6\u503C\u3002<code>perror()</code>\u7528\u6765\u5728\u62A5\u9519\u4FE1\u606F\u524D\uFF0C\u52A0\u4E0A<code>sqrt error</code>\u7684\u81EA\u5B9A\u4E49\u5B57\u7B26\u4E32\u3002</p><p>\u6267\u884C\u4E0A\u9762\u7684\u7A0B\u5E8F\uFF0C\u5C31\u4F1A\u5F97\u5230\u4E0B\u9762\u7684\u62A5\u9519\u4FE1\u606F\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ gcc test.c <span class="token parameter variable">-lm</span>
$ ./a.out
sqrt error: Numerical argument out of domain
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53EF\u53D8\u53C2\u6570\u64CD\u4F5C\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u53EF\u53D8\u53C2\u6570\u64CD\u4F5C\u51FD\u6570" aria-hidden="true">#</a> \u53EF\u53D8\u53C2\u6570\u64CD\u4F5C\u51FD\u6570</h2><p>\uFF081\uFF09\u8F93\u51FA\u51FD\u6570</p><p>\u4E0B\u9762\u662F<code>printf()</code>\u7684\u53D8\u4F53\u51FD\u6570\uFF0C\u7528\u4E8E\u6309\u7167\u7ED9\u5B9A\u683C\u5F0F\uFF0C\u8F93\u51FA\u51FD\u6570\u7684\u53EF\u53D8\u53C2\u6570\u5217\u8868\uFF08va_list\uFF09\u3002</p><ul><li>vprintf()\uFF1A\u6309\u7167\u7ED9\u5B9A\u683C\u5F0F\uFF0C\u8F93\u51FA\u5230\u63A7\u5236\u53F0\uFF0C\u9ED8\u8BA4\u662F\u663E\u793A\u5668\u3002</li><li>vfprintf()\uFF1A\u6309\u7167\u7ED9\u5B9A\u683C\u5F0F\uFF0C\u8F93\u51FA\u5230\u6587\u4EF6\u3002</li><li>vsprintf()\uFF1A\u6309\u7167\u7ED9\u5B9A\u683C\u5F0F\uFF0C\u8F93\u51FA\u5230\u5B57\u7B26\u4E32\u3002</li><li>vsnprintf()\uFF1A\u6309\u7167\u7ED9\u5B9A\u683C\u5F0F\uFF0C\u8F93\u51FA\u5230\u5B57\u7B26\u4E32\u7684\u5B89\u5168\u7248\u672C\u3002</li></ul><p>\u5B83\u4EEC\u7684\u539F\u578B\u5982\u4E0B\uFF0C\u57FA\u672C\u4E0E\u5BF9\u5E94\u7684<code>printf()</code>\u7CFB\u5217\u51FD\u6570\u4E00\u81F4\uFF0C\u9664\u4E86\u6700\u540E\u4E00\u4E2A\u53C2\u6570\u662F\u53EF\u53D8\u53C2\u6570\u5BF9\u8C61\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdarg.h&gt;</span></span>
    
<span class="token keyword">int</span> <span class="token function">vprintf</span><span class="token punctuation">(</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> restrict format<span class="token punctuation">,</span>
  va_list arg
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">vfprintf</span><span class="token punctuation">(</span>
  FILE <span class="token operator">*</span> restrict stream<span class="token punctuation">,</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> restrict format<span class="token punctuation">,</span>
  va_list arg
<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token keyword">int</span> <span class="token function">vsprintf</span><span class="token punctuation">(</span>
  <span class="token keyword">char</span> <span class="token operator">*</span> restrict s<span class="token punctuation">,</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> restrict format<span class="token punctuation">,</span>
  va_list arg
<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token keyword">int</span> <span class="token function">vsnprintf</span><span class="token punctuation">(</span>
  <span class="token keyword">char</span> <span class="token operator">*</span> restrict s<span class="token punctuation">,</span>
  <span class="token class-name">size_t</span> n<span class="token punctuation">,</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> restrict format<span class="token punctuation">,</span>
  va_list arg
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u4EEC\u7684\u8FD4\u56DE\u503C\u90FD\u4E3A\u8F93\u51FA\u7684\u5B57\u7B26\u6570\uFF0C\u5982\u679C\u51FA\u9519\uFF0C\u8FD4\u56DE\u8D1F\u503C\u3002</p><p><code>vsprintf()</code>\u548C<code>vsnprintf()</code>\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u53EF\u4EE5\u4E3A NULL\uFF0C\u7528\u6765\u67E5\u770B\u591A\u5C11\u4E2A\u5B57\u7B26\u4F1A\u88AB\u5199\u5165\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">logger</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  va_list va<span class="token punctuation">;</span>
  <span class="token function">va_start</span><span class="token punctuation">(</span>va<span class="token punctuation">,</span> format<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">vprintf</span><span class="token punctuation">(</span>format<span class="token punctuation">,</span> va<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">va_end</span><span class="token punctuation">(</span>va<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8F93\u51FA x = 12 and y = 3.20</span>
<span class="token function">logger</span><span class="token punctuation">(</span><span class="token string">&quot;x = %d and y = %.2f&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uFF082\uFF09\u8F93\u5165\u51FD\u6570</p><p>\u4E0B\u9762\u662F<code>scanf()</code>\u7684\u53D8\u4F53\u51FD\u6570\uFF0C\u7528\u4E8E\u6309\u7167\u7ED9\u5B9A\u683C\u5F0F\uFF0C\u8F93\u5165\u53EF\u53D8\u53C2\u6570\u5217\u8868 (va_list)\u3002</p><ul><li>vscanf()\uFF1A\u6309\u7167\u7ED9\u5B9A\u683C\u5F0F\uFF0C\u4ECE\u63A7\u5236\u53F0\u8BFB\u53D6\uFF08\u9ED8\u8BA4\u4E3A\u952E\u76D8\uFF09\u3002</li><li>vfscanf()\uFF1A\u6309\u7167\u7ED9\u5B9A\u683C\u5F0F\uFF0C\u4ECE\u6587\u4EF6\u8BFB\u53D6\u3002</li><li>vsscanf()\uFF1A\u6309\u7167\u7ED9\u5B9A\u683C\u5F0F\uFF0C\u4ECE\u5B57\u7B26\u4E32\u8BFB\u53D6\u3002</li></ul><p>\u5B83\u4EEC\u7684\u539F\u578B\u5982\u4E0B\uFF0C\u8DDF\u5BF9\u5E94\u7684<code>scanf()</code>\u51FD\u6570\u57FA\u672C\u4E00\u81F4\uFF0C\u9664\u4E86\u6700\u540E\u4E00\u4E2A\u53C2\u6570\u662F\u53EF\u53D8\u53C2\u6570\u5BF9\u8C61\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdarg.h&gt;</span></span>
    
<span class="token keyword">int</span> <span class="token function">vscanf</span><span class="token punctuation">(</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> restrict format<span class="token punctuation">,</span>
  va_list arg
<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token keyword">int</span> <span class="token function">vfscanf</span><span class="token punctuation">(</span>
  FILE <span class="token operator">*</span> restrict stream<span class="token punctuation">,</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> restrict format<span class="token punctuation">,</span>
  va_list arg
<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token keyword">int</span> <span class="token function">vsscanf</span><span class="token punctuation">(</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> restrict s<span class="token punctuation">,</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> restrict format<span class="token punctuation">,</span>
  va_list arg
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u4EEC\u8FD4\u56DE\u6210\u529F\u8BFB\u53D6\u7684\u9879\u6570\uFF0C\u9047\u5230\u6587\u4EF6\u7ED3\u5C3E\u6216\u9519\u8BEF\uFF0C\u5219\u8FD4\u56DE EOF\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">error_check_scanf</span><span class="token punctuation">(</span><span class="token keyword">int</span> expected_count<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  va_list va<span class="token punctuation">;</span>

  <span class="token function">va_start</span><span class="token punctuation">(</span>va<span class="token punctuation">,</span> format<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token function">vscanf</span><span class="token punctuation">(</span>format<span class="token punctuation">,</span> va<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">va_end</span><span class="token punctuation">(</span>va<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">assert</span><span class="token punctuation">(</span>count <span class="token operator">==</span> expected_count<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">error_check_scanf</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;%d, %d/%f&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>a<span class="token punctuation">,</span> <span class="token operator">&amp;</span>b<span class="token punctuation">,</span> <span class="token operator">&amp;</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,97),c=[t];function o(i,l){return s(),a("div",null,c)}const d=n(p,[["render",o],["__file","stdio.h.html.vue"]]);export{d as default};
