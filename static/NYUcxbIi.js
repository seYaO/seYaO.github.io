import{$ as N,ag as V,bs as $,ah as m,d as q,b as F,e as B,H as h,b2 as H,a3 as z,I as A,a8 as R,c as x,s as D,t as E,o as G,q as J,k as P,m as U,v as K,n as L,b9 as Q}from"./D-PSXSB2.js";import{u as W}from"./DHFQqcQw.js";const u=V(m.ui.strategy,m.ui.textarea,$),X=q({inheritAttrs:!1,props:{modelValue:{type:[String,Number],default:""},id:{type:String,default:null},name:{type:String,default:null},placeholder:{type:String,default:null},required:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},rows:{type:Number,default:3},maxrows:{type:Number,default:0},autoresize:{type:Boolean,default:!1},autofocus:{type:Boolean,default:!1},autofocusDelay:{type:Number,default:100},resize:{type:Boolean,default:!1},padded:{type:Boolean,default:!0},size:{type:String,default:null,validator(e){return Object.keys(u.size).includes(e)}},color:{type:String,default:()=>u.default.color,validator(e){return[...m.ui.colors,...Object.keys(u.color)].includes(e)}},variant:{type:String,default:()=>u.default.variant,validator(e){return[...Object.keys(u.variant),...Object.values(u.color).flatMap(t=>Object.keys(t))].includes(e)}},textareaClass:{type:String,default:null},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})},modelModifiers:{type:Object,default:()=>({})}},emits:["update:modelValue","blur","change"],setup(e,{emit:t}){const{ui:l,attrs:c}=F("textarea",B(e,"ui"),u,B(e,"class")),{emitFormBlur:p,emitFormInput:g,inputId:s,color:v,size:y,name:C}=W(e,u),n=h(H({},e.modelModifiers,{trim:!1,lazy:!1,number:!1})),r=h(null),b=()=>{var a;e.autofocus&&((a=r.value)==null||a.focus())},d=()=>{if(e.autoresize){if(!r.value)return;r.value.rows=e.rows;const a=window.getComputedStyle(r.value),o=parseInt(a.paddingTop),i=parseInt(a.paddingBottom),O=o+i,M=parseInt(a.lineHeight),{scrollHeight:T}=r.value,f=(T-O)/M;f>e.rows&&(r.value.rows=e.maxrows?Math.min(f,e.maxrows):f)}},w=a=>{n.value.trim&&(a=a.trim()),n.value.number&&(a=Q(a)),t("update:modelValue",a),g()},I=a=>{d(),n.value.lazy||w(a.target.value)},S=a=>{const o=a.target.value;t("change",o),n.value.lazy&&w(o),n.value.trim&&(a.target.value=o.trim())},j=a=>{t("blur",a),p()};z(()=>{setTimeout(()=>{b()},e.autofocusDelay)}),A(()=>e.modelValue,()=>{R(d)}),z(()=>{setTimeout(()=>{b(),d()},100)});const k=x(()=>{var o,i;const a=((i=(o=l.value.color)==null?void 0:o[v.value])==null?void 0:i[e.variant])||l.value.variant[e.variant];return D(E(l.value.base,l.value.form,l.value.rounded,l.value.placeholder,l.value.size[y.value],e.padded?l.value.padding[y.value]:"p-0",a==null?void 0:a.replaceAll("{color}",v.value),!e.resize&&"resize-none"),e.textareaClass)});return{ui:l,attrs:c,name:C,inputId:s,textarea:r,textareaClass:k,onInput:I,onChange:S,onBlur:j}}}),Y=["id","value","name","rows","required","disabled","placeholder"];function Z(e,t,l,c,p,g){return G(),J("div",{class:L(e.ui.wrapper)},[P("textarea",U({id:e.inputId,ref:"textarea",value:e.modelValue,name:e.name,rows:e.rows,required:e.required,disabled:e.disabled,placeholder:e.placeholder,class:e.textareaClass},e.attrs,{onInput:t[0]||(t[0]=(...s)=>e.onInput&&e.onInput(...s)),onBlur:t[1]||(t[1]=(...s)=>e.onBlur&&e.onBlur(...s)),onChange:t[2]||(t[2]=(...s)=>e.onChange&&e.onChange(...s))}),null,16,Y),K(e.$slots,"default")],2)}const ae=N(X,[["render",Z]]);export{ae as default};
